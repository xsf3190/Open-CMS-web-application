CREATE OR REPLACE EDITIONABLE PACKAGE "PCK_CORE" AS
    --
    gWidthThumbnail CONSTANT INTEGER:=360;
    --
    PROCEDURE callNetlifyAPI(pUserId IN users.id%type, pEndpoint IN VARCHAR2, pMethod IN VARCHAR2, pBody IN VARCHAR2 DEFAULT NULL, pData IN OUT NOCOPY CLOB);
    --
    PROCEDURE log(pMsg IN VARCHAR2);
    --
    PROCEDURE log(pMsg IN OUT NOCOPY CLOB);
    --
    PROCEDURE log_error(pCode IN NUMBER, pErrMsg IN VARCHAR2);
    --
    PROCEDURE log_error(pCode IN NUMBER, pErrMsg IN VARCHAR2, pAjax IN BOOLEAN);
    --
    PROCEDURE getApexSession(pAppId IN OUT NUMBER, pSessionId IN OUT NUMBER, pPageId IN OUT NUMBER);
    --
    FUNCTION getUserId(pSaveCookie BOOLEAN DEFAULT FALSE) RETURN users.id%type;
    --
    FUNCTION getRestUrl RETURN VARCHAR2;
    --
    FUNCTION getPageContent RETURN CLOB;
    --
    FUNCTION fmtUpdatedDate(pTimestamp IN article.updated_date%type) RETURN VARCHAR2;
    --
    FUNCTION getMediaType(pResourceType IN VARCHAR2, pFormat IN VARCHAR2) RETURN VARCHAR2;
    --
    FUNCTION getCloudinaryUrl(
        pCloudname IN VARCHAR2, 
        pResourceType IN VARCHAR2, 
        pPublicId IN VARCHAR2, 
        pFormat IN VARCHAR2, 
        pWidth IN INTEGER, 
        pDimension IN NUMBER DEFAULT NULL) RETURN VARCHAR2;
    --
    FUNCTION buildTextareaWrapper(pId IN VARCHAR2, pColumn IN VARCHAR2, pValue IN VARCHAR2) RETURN VARCHAR2;
    --
    PROCEDURE signout;
END;
/
CREATE OR REPLACE EDITIONABLE PACKAGE BODY "PCK_CORE" AS

    PROCEDURE log(pMsg IN OUT NOCOPY CLOB) IS PRAGMA AUTONOMOUS_TRANSACTION;
        k_calling_package constant varchar2(128) := utl_call_stack.subprogram(2)(1);
        k_calling_subprog constant varchar2(128) := utl_call_stack.subprogram(2)(2);
    BEGIN
        INSERT INTO log(id, procedure_name, message) VALUES (seq_log.nextval, k_calling_package || '.' || k_calling_subprog, pMsg);
        COMMIT;
    END;

    PROCEDURE log(pMsg IN VARCHAR2) IS PRAGMA AUTONOMOUS_TRANSACTION;
        k_calling_package constant varchar2(128) := utl_call_stack.subprogram(2)(1);
        k_calling_subprog constant varchar2(128) := utl_call_stack.subprogram(2)(2);    
    BEGIN
        INSERT INTO log(id, procedure_name, message) VALUES (seq_log.nextval, k_calling_package || '.' || k_calling_subprog, pMsg);
        COMMIT;
    END;

    PROCEDURE log_error(pCode IN NUMBER, pErrMsg IN VARCHAR2) IS
    BEGIN
        ROLLBACK;
        log(pCode || '-' || pErrMsg || '-' || dbms_utility.format_error_stack||dbms_utility.format_error_backtrace);
    END;

    PROCEDURE log_error(pCode IN NUMBER, pErrMsg IN VARCHAR2, pAjax IN BOOLEAN) IS
    BEGIN
        log_error(pCode, pErrMsg);
        IF (pAjax) THEN
            apex_json.open_object; 
            apex_json.write('success', FALSE); 
            apex_json.write('sqlcode', sqlcode); 
            apex_json.write('sqlerrm', sqlerrm); 
            apex_json.close_object;
        END IF;
    END;


    PROCEDURE getApexSession(pAppId IN OUT NUMBER, pSessionId IN OUT NUMBER, pPageId IN OUT NUMBER) IS
        l_parts apex_t_varchar2;
    BEGIN
        l_parts:=apex_string.split(OWA_UTIL.get_cgi_env('Apex-Session'),',');
        pAppId:=l_parts(1);
        pSessionId:=l_parts(2);
        pPageId:=l_parts(3);
    END;

    /*
    ** Return id of authenticated user for the session as 
    */
    FUNCTION getUserId(pSaveCookie BOOLEAN DEFAULT FALSE) RETURN users.id%type IS
        l_names owa_cookie.vc_arr;
        l_vals owa_cookie.vc_arr;
        l_num_vals INTEGER;

        l_app_id NUMBER;
        l_session_id users.apex_session_id%type;
        l_page_id NUMBER;
        l_apex_cookie_value users.apex_cookie_value%type;
        l_user_id users.id%type;
    BEGIN
        l_user_id:=NULL;

        getApexSession(l_app_id, l_session_id, l_page_id);

        FOR C IN (
            SELECT u.id, apex_cookie_value
              FROM apex_workspace_sessions s, users u
             WHERE s.apex_session_id=l_session_id
               AND s.user_name=u.email )
        LOOP
            /* We have an authenticated session */
            l_user_id:=C.id;

            /* Additional check that session cookie is valid */
            owa_cookie.get_all(names => l_names, vals => l_vals, num_vals => l_num_vals);
            FOR i IN 1..l_names.COUNT LOOP
                IF (l_names(i)='ORA_WWV_APP_' || l_app_id) THEN
                    IF (pSaveCookie) THEN
                        UPDATE users SET apex_cookie_value=l_vals(i) WHERE id=l_user_id;
                    ELSIF (C.apex_cookie_value<>l_vals(i)) THEN
                        RAISE_APPLICATION_ERROR(-20000,'SESSION COOKIE VALUE HAS CHANGED');
                    END IF;
                END IF;
            END LOOP;            
        END LOOP;

        IF (l_user_id IS NULL AND l_page_id=2) THEN
            RAISE_APPLICATION_ERROR(-20000,'YOUR SESSION HAS EXPIRED');
        END IF;

        RETURN (l_user_id);
    END;

    /*
    ** Return RESTful API url
    */
    FUNCTION getRestUrl RETURN VARCHAR2 IS
        l_rest_url VARCHAR2(200);
    BEGIN
        SELECT apex_util.host_url() || '/ords/' || s.pattern || m.uri_prefix
          INTO l_rest_url
          FROM user_ords_schemas s, user_ords_modules m
         WHERE s.parsing_schema=sys_context('userenv','current_schema')
           AND m.name='public';

        RETURN (l_rest_url);
    END;


    /*
    ** Logout authenticated session
    */
    PROCEDURE signout IS
        l_app_id NUMBER;
        l_session_id NUMBER;
        l_page_id NUMBER;
        session_ended EXCEPTION;
        PRAGMA EXCEPTION_INIT(session_ended,-20987);
    BEGIN
        getApexSession(l_app_id, l_session_id, l_page_id);

        BEGIN 
            apex_session.delete_session(p_session_id=>l_session_id);
            EXCEPTION WHEN session_ended THEN NULL;
        END;
        /*
        owa_cookie.send(
            name => 'ORA_WWV_APP_101',
            value => null,
            expires => sysdate -1, 
            path =>'ords' );
        */
        apex_json.open_object; 
        apex_json.write('success', TRUE);
        apex_json.close_object;

        EXCEPTION
            WHEN OTHERS THEN
                log_error(sqlcode,sqlerrm,pAjax=>TRUE);
    END;

    PROCEDURE callNetlifyAPI(pUserId IN users.id%type, pEndpoint IN VARCHAR2, pMethod IN VARCHAR2, pBody IN VARCHAR2 DEFAULT NULL, pData IN OUT NOCOPY CLOB) IS
        l_app_id NUMBER;
        l_session_id users.apex_session_id%type;
        l_page_id NUMBER;
        l_netlify_token users.netlify_token%type;
        l_netlify_url VARCHAR2(50):='https://api.netlify.com/api/v1/';
    BEGIN
        /* Get user's netlify token */
        FOR C IN (SELECT netlify_token FROM users WHERE id=pUserId) LOOP 
            l_netlify_token:=C.netlify_token;
        END LOOP;

        /* Use Administrator's token if user does not have token */
        IF (l_netlify_token IS NULL) THEN
            getApexSession(l_app_id, l_session_id, l_page_id);
            SELECT u.netlify_token INTO l_netlify_token FROM apex_applications a, users u WHERE a.application_id=l_app_id AND a.email_from=u.email;
        END IF;

        apex_web_service.clear_request_headers;
        apex_web_service.g_request_headers(1).name := 'Authorization';
        apex_web_service.g_request_headers(1).value := 'Bearer ' || l_netlify_token;   
        apex_web_service.g_request_headers(2).name := 'Content-Type';
        apex_web_service.g_request_headers(2).value := 'application/json';

        IF (pBody IS NULL) THEN
            pData := apex_web_service.make_rest_request(p_url=>l_netlify_url || pEndpoint, p_http_method=>pMethod);
        ELSE
            pData := apex_web_service.make_rest_request(p_url=>l_netlify_url || pEndpoint, p_http_method=>pMethod, p_body=>pBody);
        END IF;

        EXCEPTION WHEN OTHERS THEN
            log_error(sqlcode,sqlerrm,pAjax=>TRUE);
    END;

    /*
     **  Format timestamp according to user's current time zone
     */
    FUNCTION fmtUpdatedDate(pTimestamp IN article.updated_date%type) RETURN VARCHAR2
    IS
        l_timezone users.client_tz%type:=apex_util.get_session_state('APP_CLIENT_TZ');
    BEGIN
        IF (l_timezone IS NOT NULL) THEN
            RETURN ( TO_CHAR(pTimestamp AT TIME ZONE l_timezone, 'dd Mon yyyy fmhh:fmmi PM') );
        ELSE
            RETURN ( TO_CHAR(pTimestamp, 'dd Mon yyyy'));
        END IF;
    END;

    FUNCTION buildTextareaWrapper(pId IN VARCHAR2, pColumn IN VARCHAR2, pValue IN VARCHAR2) RETURN VARCHAR2 IS
        l_table_name user_tab_columns.table_name%type;
        l_column_name user_tab_columns.column_name%type;
        l_data_length user_tab_columns.data_length%type;
    BEGIN
        l_table_name:=UPPER(SUBSTR(pColumn,1,INSTR(pColumn,'.')-1));
        l_column_name:=UPPER(SUBSTR(pColumn,INSTR(pColumn,'.')+1));

        SELECT data_length 
          INTO l_data_length 
          FROM user_tab_columns 
         WHERE table_name=l_table_name
           AND column_name=l_column_name;

        l_column_name:=LOWER(l_column_name);

        RETURN('
        <div style="min-width:min(' || l_data_length || 'ch,100%)" class="textarea-wrapper">' ||
            CASE WHEN l_column_name='domain_name' THEN '
            <div class="button-container">' 
            END || '
                <label for="' || l_column_name || '">' || INITCAP(REPLACE(l_column_name,'_',' ')) || '</label>' ||
            CASE WHEN l_column_name='domain_name' THEN '
                <div class="dropdown">
                    <button type="button" class="show-dropdown">&blacktriangledown;</button>
                    <ul class="dropdown-items">
                        <li>
                            <button type="button" class="with-icon delete" data-table="website" data-id=' || pId || '>
                                <svg class="icon">
                                    <use href="#delete">
                                </svg>DELETE WEBSITE
                            </button>
                        </li>
                    </ul>
                </div>
            </div>' 
            END || '
            <textarea id="' || l_column_name || '" name="' || LOWER(l_column_name) || '" maxlength="' || l_data_length || '" rows="1" data-column="' || pColumn || '" data-id="' || pId || '">' || pValue || '</textarea>        
            <div class="button-container">
                <span class="result"></span>
                <span class="charcounter">' || NVL(LENGTH(pValue),0) || '/' || l_data_length || '</span>
            </div>
        </div>');
    END;

    FUNCTION buildTemplates(pWebsiteId IN website.id%type, pSelectedTemplate IN VARCHAR2) RETURN VARCHAR2 IS
        l_clob CLOB;
        l_cluster CLOB;
        l_url VARCHAR2(200);
    BEGIN
        FOR C IN (SELECT github_repos_owner, github_deploy_repos, github_token FROM github) LOOP
            apex_web_service.g_request_headers(1).name := 'Accept';
            apex_web_service.g_request_headers(1).value := 'application/vnd.github+json';
            apex_web_service.g_request_headers(2).name := 'Authorization';
            apex_web_service.g_request_headers(2).value := 'Bearer ' || C.github_token;
            apex_web_service.g_request_headers(3).name := 'User-Agent';
            apex_web_service.g_request_headers(3).value := C.github_repos_owner;

            l_url:='https://api.github.com/repos/'|| C.github_repos_owner || '/' || C.github_deploy_repos || '/contents/TEMPLATES';
            l_clob := apex_web_service.make_rest_request(p_url=>l_url,p_http_method=>'GET');

            FOR C1 IN (SELECT message FROM JSON_TABLE(l_clob, '$' COLUMNS (message))) LOOP
                IF (C1.message IS NOT NULL) THEN
                    RETURN('<p>ERROR calling ' || l_url || ' - ' || C1.message || '</p>');
                END IF;
            END LOOP;

            /* directory names are returned as array in alphabetic order */
            FOR C1 IN (SELECT name FROM JSON_TABLE(l_clob, '$[*]' COLUMNS (name))) LOOP
                l_cluster:=l_cluster || 
                '<div>
                    <input type="radio" data-column="website.template" data-id="' || pWebsiteId || '" id="template-' || LOWER(C1.name) || '" name="template" value="' || C1.name || '"' || CASE WHEN pSelectedTemplate=C1.name THEN ' checked' END || '></input>
                    <label for="template-' || LOWER(C1.name) || '">' || C1.name || '</label>
                </div>';
            END LOOP;
        END LOOP;
        RETURN (l_cluster);
    END;

    FUNCTION buildPrivacyPage RETURN CLOB IS
    BEGIN
        FOR C IN (SELECT body_html FROM article WHERE id=19124)  -- the miserable privacy policy
        LOOP
            RETURN C.body_html;
        END LOOP;
    END;

    /*
     **  Login page
     */
    FUNCTION buildLoginPage RETURN CLOB IS
    BEGIN
        FOR C IN (SELECT id FROM article WHERE id=19124)  -- the miserable privacy policy
        LOOP
            RETURN TO_CLOB('
                <ul class="login">
                    <li class="red"></li>
                    <li class="grey">
                        <span>Login w/</span>
                        <div>
                            <a href="' || apex_util.host_url('SCRIPT') || 'homeauth?request=APEX_AUTHENTICATION=Facebook&session=' || APEX_CUSTOM_AUTH.GET_SESSION_ID || '">' || pck_icons.g_facebook_svg ||'</a>
                            <a href="' || apex_util.host_url('SCRIPT') || 'homeauth?request=APEX_AUTHENTICATION=Google&session=' || APEX_CUSTOM_AUTH.GET_SESSION_ID || '">' || pck_icons.g_google_svg ||'</a>
                        </div>
                        <span data-id="' || C.id || '">Priv</span>
                    </li>
                    <li class="grey">' || pck_icons.g_github_svg || pck_icons.g_oracle_svg || '</li>
                    <li class="grey">' || pck_icons.g_cloudinary_svg || pck_icons.g_netlify_svg || '</li>
                    <li class="yellow">ALWAYS FREE</li>
                    <li class="grey"></li>
                    <li class="blue"></li>
                    <li class="grey"></li>
                    <li class="grey"></li>
                </ul>
                <dialog>
                    <div>
                        <div></div> <!-- empty div to make grid -->
                        <div class="content"></div>
                        <button type="button" class="close">&times;</button>
                    </div>
                </dialog>');
        END LOOP;
    END;

    FUNCTION getMediaType(pResourceType IN VARCHAR2, pFormat IN VARCHAR2) RETURN VARCHAR2 
    IS
    BEGIN
        IF (pResourceType='image') THEN
            RETURN ('image');
        ELSIF (pResourceType='video' AND pFormat IN ('mp4')) THEN
            RETURN ('video');
        ELSIF (pResourceType='video' AND pFormat IN ('m4a','wav')) THEN
            RETURN('audio');
        ELSE
            RETURN (NULL);
        END IF;
    END;

    /*
     **  Format Cloudinary URL
     */    
    FUNCTION getCloudinaryUrl(pCloudname IN VARCHAR2, pResourceType IN VARCHAR2, pPublicId IN VARCHAR2, pFormat IN VARCHAR2, pWidth IN INTEGER, pDimension IN NUMBER DEFAULT NULL) RETURN VARCHAR2 
    IS
        l_url VARCHAR2(500);
        l_media_type VARCHAR(5);

        FUNCTION getWidth RETURN VARCHAR2 IS
            l_left PLS_INTEGER:=1;
            l_right PLS_INTEGER:=3;
            TYPE t_arr IS VARRAY(3) OF INTEGER;
            l_arr t_arr:=t_arr(1,2,3);
            l_width INTEGER:=pWidth; 
        BEGIN
            IF (pWidth=0) THEN
                RETURN NULL;
            END IF;
            IF (pDimension IS NOT NULL) THEN
                IF (pDimension=1) THEN
                    RETURN NULL;
                ELSE
                    RETURN ',w_' || ROUND(pWidth*pDimension);
                END IF;
            END IF;
            l_arr(1):=pWidth*.25;
            l_arr(2):=pWidth*.625;
            l_arr(3):=pWidth;
            l_left:=1;
            l_right:=3;
            WHILE (l_left<l_right) LOOP
                IF (ABS(l_arr(l_left)-gWidthThumbnail) <= ABS(l_arr(l_right)-gWidthThumbnail)) THEN
                    l_right:=l_right-1;
                ELSE
                    l_left:=l_left+1;
                END IF;
            END LOOP;
            IF (l_arr(l_left)=pWidth) THEN
                RETURN NULL;
            END IF;
            RETURN ',w_' || ROUND(l_arr(l_left));
        END;
    BEGIN
        /* 
         ** Return best-fit thumbnail url of Cloudinary asset
         */
        IF (pResourceType IS NOT NULL) THEN
            l_media_type:=getMediaType(pResourceType, pFormat);
            l_url:='https://res.cloudinary.com/' || pCloudname ||
                    CASE l_media_type
                        WHEN 'image' THEN '/q_auto,f_auto' || getwidth() || '/' || pPublicId
                        WHEN 'video' THEN '/video/upload/q_auto,f_auto' || getwidth() || '/' || pPublicId || '.jpg' -- video poster
                        WHEN 'audio' THEN '/video/upload/q_auto,f_auto,w_' || gWidthThumbnail || '/fl_waveform' || '/' || pPublicId || '.png'  --audio waveform
                    END;
        END IF;        
        RETURN (l_url);
    END;    

    FUNCTION buildWebsiteArticles(pWebsiteId IN website.id%type) RETURN CLOB IS
        l_clob CLOB;
    BEGIN
        FOR C IN (SELECT a.id,
                   a.is_public,
                   c.cld_cloud_name, c.resource_type, c.public_id, c.format, c.width,
                   a.nb_assets,
                   a.title, 
                   a.excerpt,
                   wa.nav_name,
                   wa.page_title,
                   a.word_count,
                   NVL(a.updated_date, a.created_date) updated_date,
                   wa.display_order display_order
              FROM article a, website_article wa, asset c
             WHERE wa.website_id=pWebsiteId
               AND a.id=wa.article_id
               AND a.cover_asset_id=c.id(+)
             UNION ALL
             SELECT -1, null,null,null,null,null,null,0,null,null,null,null,0,systimestamp,-1 from dual
             ORDER BY display_order)
        LOOP
            l_clob:=l_clob || TO_CLOB('
            <li class="card" tabindex="0" data-id="' || C.id || '">
                <div class="button-container">
                    <div>
                        <button type="button" class="new-before">&#8678;</button>
                        <span>NEW CONTENT</span>
                        <button type="button" class="new-after">&#8680;</button>
                    </div>
                    <div class="dropdown">
                        <button type="button" class="show-dropdown">&blacktriangledown;</button>
                        <ul class="dropdown-items">
                            <li>
                                <button type="button" class="with-icon upload-media">
                                    <svg class="icon"><use href="#cloud-arrow-up"></use></svg>
                                Upload Media
                                </button>
                            </li>
                            <li>
                                <button type="button" class="with-icon edit-text">
                                    <svg class="icon"><use href="#pen-to-square"></use></svg>
                                Edit Text
                                </button>
                            </li>
                            <li class="SEO">
                                <button type="button" class="with-icon">
                                    <svg class="icon"><use href="#search-engine"></use></svg>
                                Page Title (SEO)
                                </button>
                            </li>
                            <li>
                                <button type="button" class="with-icon delete" data-table="website_article">
                                    <svg class="icon"><use href="#delete"></use></svg>
                                Delete
                                </button>
                            </li>
                        </ul>
                    </div>
                </div>' ||
                CASE WHEN NVL(C.nb_assets,0)=0
                    THEN '<button type="button" class="no-media upload-media">UPLOAD MEDIA</button>' 
                    ELSE '<img class="show-gallery"' || CASE WHEN C.format='svg' THEN ' style="object-fit:scale-down"' END || ' src="' || getCloudinaryUrl(C.cld_cloud_name, C.resource_type, C.public_id, C.format, C.width) || '">' 
                END ||
                CASE WHEN COALESCE(C.title, C.excerpt) IS NULL 
                    THEN '<br>
                        <button type="button" class="no-media edit-text">CREATE TEXT</button>'
                    ELSE '<p class="title edit-text">' || NVL(C.title, C.excerpt) || '</p> ' 
                            || buildTextareaWrapper(pWebsiteId||','||C.id,'website_article.nav_name',C.nav_name)
                            || buildTextareaWrapper(pWebsiteId||','||C.id,'website_article.page_title',C.page_title)  
                END || '   
                <footer class="button-container"><div><span class="word-count">' || NVL(C.word_count,0) || ' words' || '</span> | <span class="nb-assets">' || NVL(C.nb_assets,0) || ' media</span></div><span class="updated-date">' || fmtUpdatedDate(C.updated_date)  || '</span></footer>
            </li>');
        END LOOP;
        RETURN l_clob;
    END;

    /*
     **  Build authenticated page
     */
    FUNCTION buildAuthPage RETURN CLOB IS
        l_clob CLOB;
        l_user_id users.id%type;
        l_user_name users.name%type;
        l_edit_websites CLOB;

        TYPE t_domain IS RECORD (
            id              website.id%type,
            domain_name     website.domain_name%type,
            template        website.template%type,
            favicon_url     website.favicon_url%type,
            contact_email   website.contact_email%type,
            nb_articles     NUMBER
        );
        TYPE tt_domain IS TABLE OF t_domain;
        l_domains tt_domain;  
    BEGIN
       SELECT id
          INTO l_user_id
          FROM users
         WHERE email=apex_application.g_user;

        l_clob:= TO_CLOB(
        '<svg style="display:none">
            <symbol id="backward" viewBox="0 0 512 512">
                <path d="M459.5 440.6c9.5 7.9 22.8 9.7 34.1 4.4s18.4-16.6 18.4-29V96c0-12.4-7.2-23.7-18.4-29s-24.5-3.6-34.1 4.4L288 214.3V256v41.7L459.5 440.6zM256 352V256 128 96c0-12.4-7.2-23.7-18.4-29s-24.5-3.6-34.1 4.4l-192 160C4.2 237.5 0 246.5 0 256s4.2 18.5 11.5 24.6l192 160c9.5 7.9 22.8 9.7 34.1 4.4s18.4-16.6 18.4-29V352z">
            </symbol>
            <symbol id="forward" viewBox="0 0 512 512">
                <path d="M52.5 440.6c-9.5 7.9-22.8 9.7-34.1 4.4S0 428.4 0 416V96C0 83.6 7.2 72.3 18.4 67s24.5-3.6 34.1 4.4L224 214.3V256v41.7L52.5 440.6zM256 352V256 128 96c0-12.4 7.2-23.7 18.4-29s24.5-3.6 34.1 4.4l192 160c7.3 6.1 11.5 15.1 11.5 24.6s-4.2 18.5-11.5 24.6l-192 160c-9.5 7.9-22.8 9.7-34.1 4.4s-18.4-16.6-18.4-29V352z">
            </symbol>
            <symbol id="plus" viewBox="0 0 448 512">
                <path d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z">
            </symbol>
            <symbol id="caret-down" viewBox="0 0 320 512">
                <path d="M137.4 374.6c12.5 12.5 32.8 12.5 45.3 0l128-128c9.2-9.2 11.9-22.9 6.9-34.9s-16.6-19.8-29.6-19.8L32 192c-12.9 0-24.6 7.8-29.6 19.8s-2.2 25.7 6.9 34.9l128 128z">
            </symbol>
            <symbol id="cloud-arrow-up" viewBox="0 0 640 512">
                <path d="M144 480C64.5 480 0 415.5 0 336c0-62.8 40.2-116.2 96.2-135.9c-.1-2.7-.2-5.4-.2-8.1c0-88.4 71.6-160 160-160c59.3 0 111 32.2 138.7 80.2C409.9 102 428.3 96 448 96c53 0 96 43 96 96c0 12.2-2.3 23.8-6.4 34.6C596 238.4 640 290.1 640 352c0 70.7-57.3 128-128 128H144zm79-217c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l39-39V392c0 13.3 10.7 24 24 24s24-10.7 24-24V257.9l39 39c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9l-80-80c-9.4-9.4-24.6-9.4-33.9 0l-80 80z">
            </symbol>
            <symbol id="not-defined" viewBox="0 0 512 512">
                <path d="M367.2 412.5L99.5 144.8C77.1 176.1 64 214.5 64 256c0 106 86 192 192 192c41.5 0 79.9-13.1 111.2-35.5zm45.3-45.3C434.9 335.9 448 297.5 448 256c0-106-86-192-192-192c-41.5 0-79.9 13.1-111.2 35.5L412.5 367.2zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256z">
            </symbol>
            <symbol id="delete" viewBox="0 0 448 512">
                <path d="M170.5 51.6L151.5 80h145l-19-28.4c-1.5-2.2-4-3.6-6.7-3.6H177.1c-2.7 0-5.2 1.3-6.7 3.6zm147-26.6L354.2 80H368h48 8c13.3 0 24 10.7 24 24s-10.7 24-24 24h-8V432c0 44.2-35.8 80-80 80H112c-44.2 0-80-35.8-80-80V128H24c-13.3 0-24-10.7-24-24S10.7 80 24 80h8H80 93.8l36.7-55.1C140.9 9.4 158.4 0 177.1 0h93.7c18.7 0 36.2 9.4 46.6 24.9zM80 128V432c0 17.7 14.3 32 32 32H336c17.7 0 32-14.3 32-32V128H80zm80 64V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16zm80 0V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16zm80 0V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16z">
            </symbol>
            <symbol id="pen-to-square" viewBox="0 0 512 512">
                <path d="M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z">
            </symbol>
            <symbol id="search-engine" viewBox="0 0 512 512">
                <path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z">
            </symbol> 
            <symbol id="signout" viewBox="0 0 512 512">
                <path d="M502.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-128-128c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L402.7 224 192 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l210.7 0-73.4 73.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l128-128zM160 96c17.7 0 32-14.3 32-32s-14.3-32-32-32L96 32C43 32 0 75 0 128L0 384c0 53 43 96 96 96l64 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-64 0c-17.7 0-32-14.3-32-32l0-256c0-17.7 14.3-32 32-32l64 0z">
            </symbol>
            <symbol id="keys" viewBox="0 0 512 512">
                <path d="M336 352c97.2 0 176-78.8 176-176S433.2 0 336 0S160 78.8 160 176c0 18.7 2.9 36.8 8.3 53.7L7 391c-4.5 4.5-7 10.6-7 17v80c0 13.3 10.7 24 24 24h80c13.3 0 24-10.7 24-24V448h40c13.3 0 24-10.7 24-24V384h40c6.4 0 12.5-2.5 17-7l33.3-33.3c16.9 5.4 35 8.3 53.7 8.3zM376 96a40 40 0 1 1 0 80 40 40 0 1 1 0-80z">
            </symbol>
        </svg>');

        l_clob:=l_clob || TO_CLOB(
        '<nav class="full-width">');

        SELECT w.id, w.domain_name, w.template, w.favicon_url, w.contact_email, (SELECT COUNT(*) FROM dual WHERE EXISTS (SELECT NULL FROM website_article WHERE website_id=w.id))
          BULK COLLECT INTO l_domains
          FROM website w
         WHERE w.user_id=l_user_id
         ORDER BY w.updated_date DESC;

        FOR i IN 2..l_domains.COUNT LOOP
            l_edit_websites:=l_edit_websites || TO_CLOB(
            '<li class="edit-website">
                <button type="button" data-websiteid="' || l_domains(i).id || '">' || l_domains(i).domain_name || '
                </button>
            </li>');
        END LOOP;

        l_clob:=l_clob || TO_CLOB('
            <div class="dropdown">
                <span>' || apex_application.g_user || '</span>
                <button type="button" class="show-dropdown">&blacktriangledown;</button>
                <ul class="dropdown-items">
                    <li class="new-website">
                        <button type="button" class="with-icon">
                            <svg class="icon">
                                <use href="#plus"></use>
                            </svg>
                            NEW WEBSITE
                        </button>
                    </li>
                    <li class="signout">
                        <button type="button" class="with-icon">
                            <svg class="icon">
                                <use href="#signout"></use>
                            </svg>
                            Log Out
                        </button>
                    </li>                    
                    <li class="api-keys">
                        <button type="button" class="with-icon">
                            <svg class="icon">
                                <use href="#keys"></use>
                            </svg>
                            API Keys
                        </button>
                    </li>
                </ul>
            </div>
        </nav>');

        IF (l_domains.COUNT=0) THEN
            l_domains.EXTEND(1);
        END IF;

        l_clob:=l_clob || TO_CLOB('
        <form class="card" data-id="' || NVL(l_domains(1).id,0) || '">' ||
            buildTextareaWrapper(l_domains(1).id, 'website.domain_name', l_domains(1).domain_name) || '
            <div class="radio-wrapper">
                <fieldset>
                    <legend>Website Template</legend>
                    <div class="cluster">' || buildTemplates(l_domains(1).id, NVL(l_domains(1).template,'BASIC')) || '
                    </div>
                </fieldset>
                <div class="button-container">
                    <span class="result"></span><span>&nbsp;</span>
                </div>
            </div>' ||
            buildTextareaWrapper(l_domains(1).id, 'website.contact_email', l_domains(1).contact_email) || '
            <div class="button-container">
                <button type="button" class="add-website cta" disabled' || CASE WHEN l_domains(1).id IS NOT NULL THEN ' style="display:none"' END || '>CREATE WEBSITE</button>
                <button type="button" class="deploy-website cta"' || CASE WHEN l_domains(1).id IS NULL OR l_domains(1).nb_articles=0 THEN ' style="display:none"' END || '>DEPLOY WEBSITE</button>
            </div>
        </form>
        <hr>
        <div class="button-container full-width">
            <button type="button" class="list-view" title="Article thumbnails for drag and drop"' || CASE WHEN l_domains(1).id IS NULL THEN ' disabled style="opacity:0.2"' END || '>&#9783;</button>
        </div>
        <ul class="cards" style="display:grid">' || buildWebsiteArticles(l_domains(1).id) || '
        </ul>
        <ul class="article-list" style="display:none">
        </ul>');

        l_clob:=l_clob || TO_CLOB(
        '<dialog class="popup">
            <div>
                <button type="button" class="close">&times;</button>
                <h2></h2>
                <p></p>
            </div>
        </dialog>
        <dialog class="editor">
            <div>
                <div></div>
                <div>
                    <div id="editor"></div>
                    <div class="button-container">
                        <div id="editor-status"></div>
                        <div id="word-count"></div>
                    </div>
                </div>
                <button type="button" class="close">&times;</button>
            </div>
        </dialog>            
        <dialog class="gallery">
            <div>
                <button type="button" class="close">&times;</button>
                <div class="gallery-container" role="region" aria-label="gallery">
                    <p class="instruction"></p>
                    <ul></ul>
                </div>
                <div class="gallery-overlay">
                    <img src="">
                    <fieldset>
                        <legend><span></span><button class="close-fieldset" type="button">&times;</button></legend>
                        <button type="button" class="dimensions"></button>
                        <button type="button" class="copy-url" disabled>&boxbox;</button>
                        <button type="button" class="dimensions"></button>
                        <button type="button" class="copy-url" disabled>&boxbox;</button>
                        <button type="button" class="dimensions"></button>
                        <button type="button" class="copy-url" disabled>&boxbox;</button>
                    </fieldset>
                    <span class="counter"></span>
                    <button type="button" class="close-fullscreen">&times;</button>
                    <button type="button" class="prev">&lt;</button>
                    <button type="button" class="next">&gt;</button>
                </div>
            </div>
        </dialog>');

        RETURN l_clob;
    END;

    /*
     **  Unauthenticated user - login page
     **
     **  Authenticated user - websites and articles authored by user
     */
    FUNCTION getPageContent RETURN CLOB IS
        l_clob CLOB;
        l_css_file_urls APEX_APPLICATION_PAGES.css_file_urls%type;
        l_javascript_file_urls APEX_APPLICATION_PAGES.javascript_file_urls%type;
        l_user_id users.id%type;
        l_user_name users.name%type;
        l_current_website website.id%type;
        l_page_css APEX_APPLICATION_STATIC_FILES.file_name%type;
        l_page_js APEX_APPLICATION_STATIC_FILES.file_name%type;
    BEGIN
        SELECT NVL(css_file_urls,' '), NVL(javascript_file_urls,' ')
          INTO l_css_file_urls, l_javascript_file_urls
          FROM APEX_APPLICATION_PAGES 
         WHERE application_id=apex_application.g_flow_id
           AND page_id=apex_application.g_flow_step_id;

        l_page_css:='app' || apex_application.g_flow_id || '_' || apex_application.g_flow_step_id || '.min.css';

        IF (INSTR(l_css_file_urls,l_page_css)=0) THEN
            FOR C IN (SELECT file_content FROM APEX_APPLICATION_STATIC_FILES WHERE application_id=apex_application.g_flow_id AND file_name=REPLACE(l_page_css,'.min')) LOOP
                l_clob:=l_clob || chr(10) || '<style>' || apex_util.blob_to_clob(C.file_content) || '</style>';
            END LOOP;
        END IF;

        CASE apex_application.g_flow_step_id
            WHEN 1 THEN l_clob:=l_clob || buildLoginPage;
            WHEN 2 THEN l_clob:=l_clob || buildAuthPage;
            WHEN 3 THEN l_clob:=l_clob || buildPrivacyPage;
        END CASE;

        l_clob:=l_clob || TO_CLOB('
            <input type="hidden" name="p_flow_id" value="' || apex_application.g_flow_id ||'" id="pFlowId">
            <input type="hidden" name="p_flow_step_id" value="' || apex_application.g_flow_step_id ||'" id="pFlowStepId">
            <input type="hidden" name="p_instance" value="' || APEX_CUSTOM_AUTH.GET_SESSION_ID ||'" id="pInstance">');            

        l_clob:=l_clob || chr(10) || TO_CLOB('
        <script>
            const gRestUrl = "' || getRestUrl() || '";' || CASE WHEN apex_application.g_flow_step_id=2 THEN '
            const gHomeUrl = "' || apex_util.host_url('SCRIPT') || 'home";' END || '
        </script>');

        l_page_js:='app' || apex_application.g_flow_id || '_' || apex_application.g_flow_step_id || '.min.js';

        IF (INSTR(l_javascript_file_urls,l_page_js)=0) THEN
            FOR C IN (SELECT file_content FROM APEX_APPLICATION_STATIC_FILES WHERE application_id=apex_application.g_flow_id AND file_name=REPLACE(l_page_js,'.min')) LOOP
                l_clob:=l_clob || chr(10) || '<script>' || apex_util.blob_to_clob(C.file_content) || '</script>';
            END LOOP;
        END IF;

        l_clob:=l_clob || TO_CLOB('
            <script type="module">
              import {onCLS, onFID, onLCP} from ''https://unpkg.com/web-vitals?module'';
              onCLS(addToVitalsQueue);
              onFID(addToVitalsQueue);
              onLCP(addToVitalsQueue);
            </script>');

        RETURN (l_clob);

        EXCEPTION
            WHEN OTHERS THEN
                log_error(sqlcode,sqlerrm);
                RAISE;
    END;

END;
/