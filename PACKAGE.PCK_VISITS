CREATE OR REPLACE EDITIONABLE PACKAGE "PCK_VISITS" AS
    --
    PROCEDURE getVisits(pWebsiteId IN website.id%type, pReport IN VARCHAR2, pOffset IN NUMBER, pStatus OUT NUMBER);
    --
    PROCEDURE uploadPageVisit(pBodyText IN CLOB);
    --
    PROCEDURE daily_job;
    --
END;
/
CREATE OR REPLACE EDITIONABLE PACKAGE BODY "PCK_VISITS" AS

    ROWS_PER_PAGE CONSTANT PLS_INTEGER:=10;
    /*
     **  Procedure invoked by POST to REST end point "page-visit".
     **  Upload page visit details sent by javascript from deployed website pages
     */
    PROCEDURE uploadPageVisit(pBodyText IN CLOB) IS
        l_bodytext CLOB:=pBodyText;
        l_ip_address website_article_cwv.ip_address%type:=OWA_UTIL.get_cgi_env ('REMOTE_ADDR');
        l_user_agent website_article_cwv.user_agent%type:=SUBSTR(OWA_UTIL.get_cgi_env('HTTP_USER_AGENT'),1,255);
    BEGIN
        INSERT INTO website_article_cwv (
            website_id, article_id, seq, referrer, ip_address, lcp, lcp_rating, cls, cls_rating, inp, inp_rating, fcp, fcp_rating, ttfb, ttfb_rating,
            user_agent, mobile, connection, url, website_loaded, duration_visible, page_weight, total_requests, aud, pages_visited)
        SELECT website_id, article_id, seq, referrer, l_ip_address, lcp, lcp_rating, cls, cls_rating, inp, inp_rating, fcp, fcp_rating, ttfb, ttfb_rating,
                l_user_agent, mobile, connection, url, website_loaded, duration_visible, page_weight, total_requests, aud, SUBSTR(pages_visited,1,100) pages_visited
          FROM JSON_TABLE(l_bodytext FORMAT JSON, '$' 
            COLUMNS (website_id, article_id, seq, referrer, LCP, LCP_rating, CLS, CLS_rating, INP, INP_rating, FCP, FCP_rating, TTFB, TTFB_rating,
                    mobile, connection, url, website_loaded, duration_visible, page_weight, total_requests, webdriver, aud, pages_visited))
          WHERE NVL(webdriver,'false')='false';  

        EXCEPTION
            WHEN OTHERS THEN
                pck_core.log_error;
    END;

    /*
     **  Update IP_LOOKUP table with any new IP address details. This procedure does not fail, just reports errors to avoid loss of service (e.g. upgrade to paid plan)
     */
    PROCEDURE uploadIpLookup(pWebsiteId IN website.id%type) IS 
        l_clob clob;
        TYPE t_ip_lookup IS TABLE OF ip_lookup%rowtype;
        l_ip_lookup t_ip_lookup:=t_ip_lookup();
        l_current_timestamp ip_lookup.created_date%type:=current_timestamp;
    BEGIN
        FOR C IN (SELECT DISTINCT ip_address FROM page_hit WHERE website_id=pWebsiteId MINUS SELECT ip FROM ip_lookup )
        LOOP
            pck_api.callIpdataAPI(null,C.ip_address,'GET',l_clob);
            FOR C1 IN (SELECT city,country_code,postal,error_code,error_message FROM JSON_TABLE(l_clob, '$' COLUMNS(city,country_code,postal,error_code,error_message)))
            LOOP
                l_ip_lookup.EXTEND;
                l_ip_lookup(l_ip_lookup.LAST).ip:=C.ip_address;
                l_ip_lookup(l_ip_lookup.LAST).city:=C1.city;
                l_ip_lookup(l_ip_lookup.LAST).country_code:=C1.country_code;
                l_ip_lookup(l_ip_lookup.LAST).postal:=C1.postal;
                l_ip_lookup(l_ip_lookup.LAST).error_code:=C1.error_code;
                l_ip_lookup(l_ip_lookup.LAST).error_message:=C1.error_message;
                l_ip_lookup(l_ip_lookup.LAST).created_date:=l_current_timestamp;
            END LOOP;
        END LOOP;
        FORALL i IN l_ip_lookup.FIRST..l_ip_lookup.LAST
            INSERT INTO ip_lookup VALUES l_ip_lookup(i);
    END;

    /*
     **  Google core web vital and website visit duration data is uploaded from client sessions to table website_article_cwv.
     **  This procedure aggregates the data into the page_hit table.
     **  Each page_hit row represents one visit from one ip address to a web page in a discrete client session.
     */
    FUNCTION uploadPageHits(pWebsiteId IN website.id%type) RETURN INTEGER IS
        TYPE t_browser_lookup IS TABLE OF browser_lookup%rowtype;
        l_browser_lookup t_browser_lookup:=t_browser_lookup();
        l_object JSON_OBJECT_T;
        l_array JSON_ARRAY_T;
        l_clob clob;
        l_clob2 clob;
        n PLS_INTEGER;
    BEGIN
        FOR C IN (SELECT DISTINCT user_agent FROM website_article_cwv c WHERE website_id=pWebsiteId AND NOT EXISTS (SELECT NULL FROM browser_lookup b WHERE b.user_agent=c.user_agent))
        LOOP
            l_array:= new JSON_ARRAY_T;
            l_object:=new JSON_OBJECT_T;
            l_object.put('name','User-Agent');
            l_object.put('value',C.user_agent);
            l_array.append(l_object);
            l_object:=new JSON_OBJECT_T;
            l_object.put('headers',l_array);
            l_clob:=l_object.stringify;
            pck_api.callBrowserAPI(l_clob,l_clob2);
            FOR C1 IN (SELECT simple_software_string FROM JSON_TABLE(l_clob2 FORMAT JSON, '$.detection' COLUMNS (simple_software_string)) )
            LOOP
                l_browser_lookup.EXTEND;
                l_browser_lookup(l_browser_lookup.LAST).browser:=C1.simple_software_string;
                l_browser_lookup(l_browser_lookup.LAST).user_agent:=C.user_agent;
            END LOOP;
        END LOOP;
        FORALL i IN l_browser_lookup.FIRST..l_browser_lookup.LAST
            INSERT INTO browser_lookup VALUES l_browser_lookup(i);
        
        MERGE INTO page_hit t
        USING (
            SElECT 
                website_id, article_id, website_loaded, ip_address, apex_string_util.get_domain(referrer) referrer, lcp, lcp_rating, cls, cls_rating, inp, inp_rating, fcp, fcp_rating, ttfb, ttfb_rating, NVL(duration_visible,0) duration_visible, NVL(browser,user_agent) browser, connection, url, mobile,
                to_timestamp('1970-01-01','yyyy-mm-dd') + numtodsinterval(website_loaded,'second') visit_date, page_weight, total_requests, aud, pages_visited
            FROM
            (
                SELECT 
                    website_id, article_id, ip_address, website_loaded,  
                    MAX(CASE WHEN INSTR(referrer,url)=0 THEN referrer END) referrer, 
                    MAX(lcp) lcp, MAX(lcp_rating) lcp_rating, MAX(cls) cls, MAX(cls_rating) cls_rating, MAX(inp) inp, MAX(inp_rating) inp_rating, MAX(fcp) fcp, MAX(fcp_rating) fcp_rating, MAX(ttfb) ttfb, MAX(ttfb_rating) ttfb_rating, 
                    SUM(duration_visible) duration_visible, MAX(website_article_cwv.user_agent) user_agent, MAX(browser_lookup.browser) browser, MAX(connection) connection, MAX(url) url, MAX(mobile) mobile, MAX(page_weight) page_weight, MAX(total_requests) total_requests,
                    MAX(aud) aud, MAX(pages_visited) pages_visited
                FROM website_article_cwv, browser_lookup
                WHERE website_id=pWebsiteId
                AND INSTR(website_article_cwv.user_agent,'Headless')=0
                AND browser_lookup.user_agent(+)=website_article_cwv.user_agent
                GROUP BY website_id, article_id, ip_address, website_loaded
            )
        ) s
        ON (t.website_id=s.website_id AND 
            t.article_id=s.article_id AND 
            t.ip_address=s.ip_address AND 
            t.website_loaded=s.website_loaded)
        WHEN NOT MATCHED THEN
            INSERT (website_id, article_id, ip_address, website_loaded, visit_date, referrer, duration_visible, lcp, lcp_rating, cls, cls_rating, inp, inp_rating, fcp, fcp_rating, ttfb, ttfb_rating, browser, connection, url, mobile, page_weight, total_requests, aud, pages_visited)    
            VALUES (s.website_id, s.article_id, s.ip_address, s.website_loaded, s.visit_date, s.referrer, s.duration_visible, s.lcp, s.lcp_rating, s.cls, s.cls_rating, s.inp, s.inp_rating, s.fcp, s.fcp_rating, s.ttfb, s.ttfb_rating, s.browser, s.connection, s.url, s.mobile, s.page_weight, s.total_requests, s.aud, s.pages_visited)
        WHEN MATCHED THEN
            UPDATE SET t.updated_date=current_timestamp,
                t.duration_visible=t.duration_visible+s.duration_visible,
                t.lcp=CASE WHEN t.lcp IS NOT NULL AND s.lcp IS NOT NULL THEN GREATEST(s.lcp,t.lcp) ELSE COALESCE(s.lcp,t.lcp) END,
                t.lcp_rating=CASE WHEN t.lcp_rating IS NOT NULL AND s.lcp_rating IS NOT NULL THEN GREATEST(s.lcp_rating,t.lcp_rating) ELSE COALESCE(s.lcp_rating,t.lcp_rating) END,
                t.cls=CASE WHEN t.cls IS NOT NULL AND s.cls IS NOT NULL THEN GREATEST(s.cls,t.cls) ELSE COALESCE(s.cls,t.cls) END,
                t.cls_rating=CASE WHEN t.cls_rating IS NOT NULL AND s.cls_rating IS NOT NULL THEN GREATEST(s.cls_rating,t.cls_rating) ELSE COALESCE(s.cls_rating,t.cls_rating) END,
                t.inp=CASE WHEN t.inp IS NOT NULL AND s.inp IS NOT NULL THEN GREATEST(s.inp,t.inp) ELSE COALESCE(s.inp,t.inp) END,
                t.inp_rating=CASE WHEN t.inp_rating IS NOT NULL AND s.inp_rating IS NOT NULL THEN GREATEST(s.inp_rating,t.inp_rating) ELSE COALESCE(s.inp_rating,t.inp_rating) END,
                t.fcp=CASE WHEN t.fcp IS NOT NULL AND s.fcp IS NOT NULL THEN GREATEST(s.fcp,t.fcp) ELSE COALESCE(s.fcp,t.fcp) END,
                t.fcp_rating=CASE WHEN t.fcp_rating IS NOT NULL AND s.fcp_rating IS NOT NULL THEN GREATEST(s.fcp_rating,t.fcp_rating) ELSE COALESCE(s.fcp_rating,t.fcp_rating) END,
                t.ttfb=CASE WHEN t.ttfb IS NOT NULL AND s.ttfb IS NOT NULL THEN GREATEST(s.ttfb,t.ttfb) ELSE COALESCE(s.ttfb,t.ttfb) END,
                t.ttfb_rating=CASE WHEN t.ttfb_rating IS NOT NULL AND s.ttfb_rating IS NOT NULL THEN GREATEST(s.ttfb_rating,t.ttfb_rating) ELSE COALESCE(s.ttfb_rating,t.ttfb_rating) END,
                t.url=COALESCE(t.url,s.url) 
                ;
        n:=SQL%ROWCOUNT;

        DELETE website_article_cwv WHERE website_id=pWebsiteId;

        uploadIpLookup(pWebsiteId);

        RETURN(n);
    END;

    
    FUNCTION sql2Html (pSql IN VARCHAR2, pWebsiteId IN website.id%type, pUrl IN VARCHAR2, pOffset IN NUMBER) RETURN CLOB
    IS
        l_cur       NUMBER:=dbms_sql.open_cursor;
        l_execute   NUMBER;
        l_col_cnt    INTEGER;
        rec_tab      DBMS_SQL.DESC_TAB;
        l_flag       NUMBER;
        l_varchar2   VARCHAR2 (4000);
        l_date       DATE;
        l_number     NUMBER;
        l_html       CLOB;
    BEGIN
    --pck_core.log(pSql);
        dbms_sql.parse(l_cur,pSql,dbms_sql.native);

        dbms_sql.bind_variable(l_cur,':B1',pWebsiteId);
        dbms_sql.bind_variable(l_cur,':B2',pUrl);
        dbms_sql.bind_variable(l_cur,':B3',pOffset);


        -- define columns
        
        dbms_sql.describe_columns (l_cur, l_col_cnt, rec_tab);
        FOR i IN 1 .. l_col_cnt
        LOOP
            CASE rec_tab (i).col_type
                 WHEN 1 THEN
                    dbms_sql.define_column (l_cur,i,l_varchar2,2000);
                 WHEN 2 THEN
                    dbms_sql.define_column (l_cur, i, l_number);
                 WHEN 12 THEN
                    dbms_sql.define_column (l_cur, i, l_date);
                 ELSE
                    dbms_sql.define_column (l_cur,i,l_varchar2,2000);
              END CASE;
        END LOOP;

        IF (pOffset=0) THEN
            l_html:=
            '<table role="presentation">' ||
            '<thead><tr>';
           FOR i IN 1 .. l_col_cnt
           LOOP
              l_html:=l_html || '<th>' || rec_tab (i).col_name || '</th>';
           END LOOP;
           l_html:=l_html || '</tr></thead><tbody>';
        END IF;

        l_execute:=dbms_sql.execute(l_cur);
        
       -- Print data fetched by query
       LOOP
          l_flag := dbms_sql.fetch_rows (l_cur);
          EXIT WHEN l_flag = 0;
          
          l_html:=l_html || '<tr>';
          FOR i IN 1 .. l_col_cnt
          LOOP
             CASE rec_tab(i).col_type
                WHEN 1 THEN
                   dbms_sql.column_value (l_cur, i, l_varchar2);
                   l_html:=l_html || '<td>' || l_varchar2 || '</td>';
                WHEN 2 THEN
                   dbms_sql.column_value (l_cur, i, l_number);
                   l_html:=l_html || '<td>' || l_number || '</td>';
                WHEN 12 THEN
                   dbms_sql.column_value (l_cur, i, l_date);
                   l_html:=l_html || '<td>' || TO_CHAR (l_date, 'DD/MM/YYYY HH24:MI:SS') || '</td>';
                ELSE
                   l_html:=l_html || '<td>' || l_varchar2 || '</td>';
             END CASE;
          END LOOP;
          l_html:=l_html || '</tr>';
       END LOOP;

        IF (pOffset=0) THEN
            l_html:=l_html || '</tbody></table>';
        END IF;

       dbms_sql.close_cursor (l_cur);

       RETURN (l_html);
    END;

    /*
    **  EMAIL WEBSITE VISIT ANALYSIS
    */
    PROCEDURE sendmail(pWebsiteId IN website.id%type, pContent IN OUT NOCOPY CLOB) IS
        l_json JSON_OBJECT_T;
        l_payload CLOB;
        l_clob CLOB;
        l_body CLOB:='To view the content of this message, please use an HTML enabled mail client.'||utl_tcp.crlf;
        l_body_html CLOB:=
        '<!DOCTYPE html>
         <html>
            <head>
                <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <meta name="format-detection" content="telephone=no">
                <meta name="format-detection" content="date=no">
                <meta name="format-detection" content="address=no">
                <meta name="format-detection" content="email=no">
                <style type="text/css">
                    body {
                        font-family:Georgia,sans-serif;
                        font-size:1rem;
                    }
                    td,
                    th {
                        border: 1px solid rgb(190, 190, 190);
                        padding: 0.5rem;
                    }
                    table {
                        border-collapse: collapse;
                        border: 2px solid rgb(200, 200, 200);
                        width: 100%;
                    }
                    table + table {
                        margin-top: 1rem;
                    }
                    thead {
                        background-color: #d7d9f2;
                    }
                    td.centered {
                        text-align: center;
                        font-weight: 900;
                    }
                    td.centered > span {
                        display: inline-block;
                        padding: 4px;
                    }
                    .good {
                        color: #000;
                        background-color: #0cce6b;
                    }
                    .needs-improvement {
                        color: #000;
                        background-color: #ffa401;
                    }
                    .poor {
                        color: #000;
                        background-color: #ff4e41;
                    }
                </style>
            </head>
        <body>';
    BEGIN
        FOR C IN (SELECT NVL(w.contact_email, u.email) contact_email, w.domain_name FROM website w, users u where u.id=w.user_id AND w.id=pWebsiteId) LOOP
            l_json:=new JSON_OBJECT_T;
            l_json.put('contactEmail',C.contact_email);
            l_json.put('subject','Website visits to '|| C.domain_name);
            l_json.put('body', l_body_html || pContent || '</body></html>');
            l_json.put('sourceEmail','visits@adfreesites.com');

            l_payload:=l_json.stringify;
            pck_api.callAWSemailAPI(pMethod=>'POST',pBody=>l_payload,pData=>l_clob);
        END LOOP;

        EXCEPTION WHEN OTHERS THEN pck_core.log_error;
    END;

    /*
    ** Convert seconds to hms notation, e.g. 100 -> 1m40s
    */
    FUNCTION elapsedTime(pSeconds IN NUMBER) RETUrN VARCHAR2 IS
        t_ela_time apex_t_varchar2;
        l_ela_time VARCHAR2(13);
    BEGIN
        IF (pSeconds>86399) THEN
            RETURN ('>24h');
        END IF;
        t_ela_time:=apex_string.split(TO_CHAR(TO_DATE(pSeconds,'sssss'),'fmhh24:mi:ss'),':');
        l_ela_time:=NULL;
        IF (t_ela_time(1)<>'0') THEN
            l_ela_time:=l_ela_time || t_ela_time(1) || 'h';
        END if;
        IF (t_ela_time(2)<>'0') THEN
            l_ela_time:=l_ela_time || ' ' ||t_ela_time(2) || 'm';
        END if;
        IF (t_ela_time(3)<>'0') THEN
            l_ela_time:=l_ela_time || ' ' || t_ela_time(3) || 's';
        END if;
        RETURN (LTRIM(l_ela_time));
    END;

    /*
    **  Return log of all visits to website
    */
    PROCEDURE getWebsiteVisits(pWebsiteId IN website.id%type, pOffset IN NUMBER, pTimeZone IN VARCHAR2, pUrl IN VARCHAR2, pCount IN OUT NUMBER, pHtml IN OUT NOCOPY CLOB) IS
        l_content CLOB;
        l_popover VARCHAR2(300);
        l_rating VARCHAR2(7);
        l_rating_popover VARCHAR2(1000);
        l_total PLS_INTEGER;
        l_ela_time VARCHAR2(11);
        l_nb_pages PLS_INTEGER;
        n PLS_INTEGER:=0;
    BEGIN
        IF (pOffset=0) THEN
            SELECT COUNT(*) INTO l_nb_pages FROM website_article WHERE website_id=pWebsiteId;

            l_content:=
            '<table role="presentation">' ||
                '<thead>' ||
                    '<tr>' ||
                        '<th>Web Vitals</th>' ||
                        '<th>Started</th>' ||
                        '<th>Location<br>Visit No.</th>' ||
                        '<th>Engagement' || CASE WHEN l_nb_pages>1 THEN '<br>Pages Seen' END || '</th>' ||
                        '<th>Referrer</th>' ||
                    '</tr>' ||
                '</thead>' ||
                '<tbody>';
        END IF;

        FOR C IN (
            WITH website_hits as 
            (
                SELECT p.website_id, p.ip_address, p.visit_date, 
                        COUNT(*) OVER() total,
                        COUNT(DISTINCT article_id) pages_viewed,
                        ROW_NUMBER() OVER (PARTITION BY p.ip_address ORDER BY p.visit_date) visit_count,
                        MAX(p.referrer) referrer, 
                        MAX(p.ttfb_rating) ttfb_rating, MAX(p.fcp_rating) fcp_rating,
                        MAX(p.lcp_rating) lcp_rating, MAX(p.cls_rating) cls_rating, MAX(p.inp_rating) inp_rating, 
                        MAX(p.ttfb) ttfb, MAX(p.fcp) fcp, MAX(p.lcp) lcp, MAX(p.cls) cls, MAX(p.inp) inp, 
                        MAX(p.page_weight) page_weight, 
                        MAX(p.total_requests) total_requests,
                        SUM(p.duration_visible) duration_visible, 
                        MAX(p.browser) browser, 
                        MAX(p.connection) connection, 
                        MAX(p.mobile) mobile
                  FROM website w, page_hit p
                 WHERE w.id=pWebsiteId
                   AND p.website_id=w.id
                   AND p.url=pUrl
                 GROUP BY p.website_id, p.ip_address, p.visit_date
                 ORDER BY p.visit_date DESC
                 OFFSET pOffset ROWS
                 FETCH FIRST ROWS_PER_PAGE ROWS ONLY
            )
            SELECT wh.total,
                   '<sup' || CASE WHEN wh.visit_count=1 THEN ' style="font-weight:900;font-stretch:120%"' END || '>' || wh.visit_count || SUBSTR(TO_CHAR(TO_DATE(wh.visit_count,'j'),'jspth'),-2) || '</sup>' visit_count,
                    wh.pages_viewed, wh.visit_date, wh.referrer, ip.city||', '||ip.country_code||' '||ip.postal location, 
                    wh.browser, wh.connection || CASE WHEN wh.mobile='true' THEN ' (Mobile)' END connection, 
                    wh.duration_visible, 
                    wh.ttfb_rating, wh.fcp_rating, wh.lcp_rating, wh.cls_rating, wh.inp_rating, 
                    TO_CHAR(ROUND(wh.ttfb/1000,2),'fm90.99') || NVL2(wh.ttfb,'s',null) ttfb, 
                    TO_CHAR(ROUND(wh.fcp/1000,2),'fm90.99') || NVL2(wh.fcp,'s',null) fcp, 
                    TO_CHAR(ROUND(wh.lcp/1000,2),'fm90.99') || NVL2(wh.lcp,'s',null) lcp, 
                    ROUND(cls,2) cls, 
                    TO_CHAR(ROUND(wh.inp/1000,2),'fm90.99') || NVL2(wh.inp,'s',null) inp,
                    wh.page_weight,
                    wh.total_requests
              FROM website_hits wh, ip_lookup ip
             WHERE ip.ip=wh.ip_address
        ) 
        LOOP
            n:=n+1;
            IF (n=1) THEN
                pCount:=C.total;
            END IF;
            n:=pOffset+n;

            l_ela_time:=elapsedTime(C.duration_visible);

            -- Compute overall Google Core web vitals rating
            
            l_rating:=
            CASE 
                WHEN C.lcp_rating='good' AND NVL(C.cls_rating,'good')='good' AND NVL(C.inp_rating,'good')='good' THEN 'good'
                WHEN C.lcp_rating='needs-improvement' OR C.cls_rating='needs-improvement' OR C.inp_rating='needs-improvement' THEN 'improve'
                WHEN C.lcp_rating='poor' OR C.cls_rating='poor' OR C.inp_rating='poor' THEN 'poor'
                WHEN NVL(C.ttfb_rating,'good')='good' AND NVL(C.fcp_rating,'good')='good' THEN 'good'
                WHEN C.ttfb_rating='needs-improvement' OR C.fcp_rating='needs-improvement' THEN 'improve'
                WHEN C.ttfb_rating='poor' OR C.fcp_rating='poor' THEN 'poor'
            END;

            IF (l_rating IS NOT NULL) THEN
                l_rating_popover:=
                '<button type="button" class="button cwv ' || l_rating ||  '" popovertarget="popover_' || n || '" style="anchor-name: --info-btn-' || n || '">' || UPPER(l_rating) || '</button>' ||
                '<table id="popover_' || n || '" class="popover-right" popover style="position-anchor: --info-btn-' || n || '">' || 
                    '<tr><td>Browser</td><td>' || C.browser || '</td></tr>' || 
                    CASE WHEN C.connection IS NOT NULL THEN 
                    '<tr><td>Connection</td><td>' || C.connection || '</td></tr>'
                    END ||
                    '<tr><td>Page Weight</td><td>' || apex_string_util.to_display_filesize(C.page_weight) || '</td></tr>' || 
                    '<tr><td>Resource Requests</td><td>' || C.total_requests || '</td></tr>' || 
                    '<tr><td>Web Vitals</td>' ||
                        '<td>' ||
                            '<table>' ||
                                '<thead><tr><th>TTFB</th><th>FCP</th><th>LCP</th><th>CLS</th><th>INP</th></tr></thead>' ||
                                '<tbody><tr><td class="' || C.TTFB_rating || '">' || C.TTFB || '</td><td class="' || C.FCP_rating || '">' || C.FCP || '</td><td class="' || C.LCP_rating || '">' || C.LCP || '</td><td class="' || C.CLS_rating || '">' || C.CLS || '</td><td class="' || C.INP_rating || '">' || C.INP || '</td></tr></tbody>' ||
                            '</table>' ||
                        '</td>' ||
                    '</tr>' ||
                '</table>';
            END IF;

            l_content:=l_content ||
                '<tr>' ||
                    '<td class="centered">' || l_rating_popover || '</td>' ||
                    '<td>' || TO_CHAR(C.visit_date at time zone pTimeZone, 'dd-mm-yy')  || '<br>' || TO_CHAR(C.visit_date at time zone pTimeZone, 'fmhh24:fmmipm') || '</td>' ||
                    '<td>' || C.location || '<br>' || C.visit_count || '</td>' ||
                    '<td>' || l_ela_time || CASE WHEN l_nb_pages>1 THEN '<br>' || C.pages_viewed END || '</td>' ||
                    '<td>' || NVL(REPLACE(C.referrer,'.','&#173;.'),'-') || '</td>' ||
                '</tr>';
        END LOOP;

        IF (pOffset=0) THEN
            l_content:=l_content || '</tbody></table>';
        END IF;

        pHtml:=l_content;
    END;


    PROCEDURE getPerformance(pWebsiteId IN website.id%type, pTimeZone IN VARCHAR2, pUrl IN VARCHAR2, pHtml IN OUT NOCOPY CLOB)  IS
        l_start_date page_hit.visit_date%type;
        l_end_date page_hit.visit_date%type;
        l_days_diff NUMBER;
        l_days_period PLS_INTEGER:=7;
        l_title VARCHAR2(200);
        l_legend VARCHAR2(200);
        l_summary LONG;
        l_graph CLOB;
        l_y_axis_width PLS_INTEGER:=6; 
        l_bar_width PLS_INTEGER:=7;
        l_gap NUMBER;
        l_start_x NUMBER;
        l_footer VARCHAR2(2000);
        l_table VARCHAR2(4000);

        FUNCTION buildSVG(pTitle IN VARCHAR2, pScore IN NUMBER, pGood IN NUMBER, pNeedsImprovement in NUMBER, pPoor IN NUMBER) RETURN VARCHAR2 IS
            l_cwv_score VARCHAR2(20);
        BEGIN
            l_cwv_score:=
            CASE pTitle
                WHEN 'Largest Contentful Paint' THEN
                    CASE 
                        WHEN pScore <= 2500 THEN 'good' 
                        WHEN pScore <= 4000 THEN 'needs-improvement'
                        ELSE 'poor'
                    END
                WHEN 'Content Layout Shift' THEN
                    CASE 
                        WHEN pScore <= 0.1 THEN 'good' 
                        WHEN pScore <= 0.25 THEN 'needs-improvement'
                        ELSE 'poor'
                    END
                WHEN 'Interaction to Next Paint' THEN
                    CASE 
                        WHEN pScore <= 200 THEN 'good' 
                        WHEN pScore <= 500 THEN 'needs-improvement'
                        ELSE 'poor'
                    END
            END; 
            RETURN(
                '<text x="0" y="10" class="metric-title">' || pTitle || '</text>' ||
                '<text x="100" y="10" class="metric-score '|| l_cwv_score || '">' || CASE WHEN pTitle='Content Layout Shift' THEN TO_CHAR(pScore) ELSE elapsedTime(ROUND(pScore/1000)) END || '</text>' ||

                '<rect x="0" y="20" width="' || pGood || '" height="25" class="good"/>' ||
                CASE WHEN pGood>0 THEN
                '<text x="' || ROUND(pGood/2) || '" y="32.5" class="metric">' || pGood || '%</text>'
                END ||

                '<rect x="' || pGood || '" y="20" width="' || pNeedsImprovement || '" height="25" class="needs-improvement"/>' ||
                CASE WHEN pNeedsImprovement>0 THEN
                '<text x="' || ROUND(pGood+(pNeedsImprovement/2)) || '" y="32.5" class="metric">' || pNeedsImprovement || '%</text>'
                END ||

                '<rect x="' || ROUND(100- pPoor) || '" y="20" width="' || pPoor || '" height="25" class="poor"/>' ||
                CASE WHEN pPoor>0 THEN
                '<text x="' || ROUND(100- pPoor + (pPoor/2)) || '" y="32.5" class="metric">' || pPoor || '%</text>' 
                END ||
                '</svg>'
            );
        END;
    BEGIN
        SELECT MIN(visit_date) start_date, MAX(visit_date) end_date, TRUNC(MAX(visit_date))-TRUNC(MIN(visit_date)) 
          INTO l_start_date, l_end_date, l_days_diff
          FROM page_hit
         WHERE website_id=pWebsiteid
           AND url=pUrl;

        /*
        ** OVERALL CWV RATINGS 
        */

        FOR C IN (
            WITH 
            sessions AS
            (
            SELECT ROW_NUMBER() OVER (PARTITION BY ph.ip_address ORDER BY ph.visit_date) visit, 
                MAX(lcp) lcp, MAX(cls) cls, MAX(inp) inp,  
                MAX(lcp_rating) lcp_rating, MAX(cls_rating) cls_rating, MAX(inp_rating) inp_rating
              FROM page_hit ph
             WHERE ph.website_id=pWebsiteid
               AND ph.url=pUrl
             GROUP BY ph.visit_date, ph.ip_address
            ),
            dataset AS
            (
            SELECT 'LCP' metric,lcp_rating rating, COUNT(*) value
            FROM sessions p
            WHERE p.visit=1
            AND lcp_rating IS NOT NULL
            GROUP BY lcp_rating
            UNION ALL
            SELECT 'CLS',cls_rating, COUNT(*)
            FROM sessions p
            WHERE p.visit=1
            AND cls_rating IS NOT NULL
            GROUP BY cls_rating
            UNION ALL
            SELECT 'INP',inp_rating, COUNT(*)
            FROM sessions p
            WHERE p.visit=1
            AND inp_rating IS NOT NULL
            GROUP BY inp_rating
            ),
            cwv AS
            (
            SELECT metric, rating, ROUND(RATIO_TO_REPORT(value) OVER (PARTITION BY metric)*100) pct
            FROM dataset
            ),
            score AS
            (
            SELECT APPROX_PERCENTILE(0.75 DETERMINISTIC) WITHIN GROUP (ORDER BY lcp) lcp75, APPROX_PERCENTILE(0.90 DETERMINISTIC) WITHIN GROUP (ORDER BY lcp) lcp90,
                APPROX_PERCENTILE(0.75 DETERMINISTIC) WITHIN GROUP (ORDER BY cls) cls75, APPROX_PERCENTILE(0.90 DETERMINISTIC) WITHIN GROUP (ORDER BY cls) cls90,
                APPROX_PERCENTILE(0.75 DETERMINISTIC) WITHIN GROUP (ORDER BY inp) inp75, APPROX_PERCENTILE(0.90 DETERMINISTIC) WITHIN GROUP (ORDER BY inp) inp90
            FROM sessions p
            WHERE p.visit=1
            GROUP BY p.visit
            )
            SELECT 
                MAX(score.lcp75) lcp75, MAX(score.lcp90) lcp90, MAX(score.cls75) cls75, MAX(score.cls90) cls90, MAX(score.inp75) inp75, MAX(score.inp90) inp90,
                MAX(CASE WHEN metric='LCP' AND rating='good' THEN pct ELSE 0 END) LCP_good, MAX(CASE WHEN metric='LCP' AND rating='needs-improvement' THEN pct ELSE 0 END) LCP_improve, MAX(CASE WHEN metric='LCP' AND rating='poor' THEN pct ELSE 0 END) LCP_poor,
                MAX(CASE WHEN metric='CLS' AND rating='good' THEN pct ELSE 0 END) CLS_good, MAX(CASE WHEN metric='CLS' AND rating='needs-improvement' THEN pct  ELSE 0 END) CLS_improve, MAX(CASE WHEN metric='CLS' AND rating='poor' THEN pct ELSE 0 END) CLS_poor,
                MAX(CASE WHEN metric='INP' AND rating='good' THEN pct ELSE 0 END) INP_good, MAX(CASE WHEN metric='INP' AND rating='needs-improvement' THEN pct  ELSE 0 END) INP_improve, MAX(CASE WHEN metric='INP' AND rating='poor' THEN pct ELSE 0 END) INP_poor
            FROM cwv, score
        ) LOOP
            pHtml:=
            '<div class="grid grid__auto_fit">' ||
                '<svg viewBox="0 0 100 50" role="img">' ||
                    '<style>' ||
                        'text {' ||
                            'font-family: system-ui;' ||
                            'font-size: 20%;' ||
                            'fill: white;' ||
                            'dominant-baseline: central;' ||
                            'text-anchor: middle;' ||
                        '}' ||
                        '.metric-title {' ||
                            'fill: black;' ||
                            'text-anchor: start;' ||
                        '}' ||
                        '.metric-score {' ||
                            'text-anchor: end;' ||
                            'font-weight: 900;' ||
                        '}' ||
                        '.metric {' ||
                            'text-anchor: middle;' ||
                            'font-weight: 750;' ||
                        '}' ||
                        '.good {' ||
                            'fill: #355E3B;' ||
                        '}' ||
                        '.needs-improvement {' ||
                            'fill: orange;' ||
                        '}' ||
                        '.poor {' ||
                            'fill: red;' ||
                        '}' ||
                    '</style>' || 
                    buildSVG('Largest Contentful Paint', C.lcp75, C.lcp_good, C.lcp_improve, C.lcp_poor) ||
                    '<svg viewBox="0 0 100 50" role="img">' ||
                    buildSVG('Content Layout Shift', C.cls75, C.cls_good, C.cls_improve, C.cls_poor) ||
                    '<svg viewBox="0 0 100 50" role="img">' ||
                    buildSVG('Interaction to Next Paint', C.inp75, C.inp_good, C.inp_improve, C.inp_poor) ||
            '</div>';
        END LOOP;
        
    END;

    PROCEDURE getVisitsByLocation(pWebsiteId IN website.id%type, pOffset IN NUMBER, pUrl IN VARCHAR2, pCount IN OUT NUMBER, pHtml IN OUT NOCOPY CLOB)  IS
        l_content CLOB;
        n PLS_INTEGER:=0;
    BEGIN
        IF (pOffset=0) THEN
            l_content:=
            '<table role="presentation">
                <thead>
                    <tr>
                        <th>Location</th>
                        <th>No. Visits</th>
                    </tr>
                </thead>
                <tbody>';
        END IF;

        FOR C IN (
                    SELECT location,  nb_visits, RATIO_TO_REPORT(nb_visits) OVER() pct, COUNT(*) OVER() total
                    FROM
                        (
                        SELECT i.country_code location, COUNT(*) nb_visits, COUNT(*) OVER() total_visits
                          FROM page_hit p, ip_lookup i
                         WHERE p.website_id=pWebsiteId
                           AND p.url=pUrl
                           AND p.ip_address=i.ip
                         AND i.country_code IS NOT NULL
                         GROUP BY i.country_code
                        )
                        ORDER BY nb_visits DESC, location
                        OFFSET pOffset ROWS
                        FETCH FIRST ROWS_PER_PAGE ROWS ONLY
            ) LOOP
                n:=n+1;
                IF (n=1) THEN
                    pCount:=C.total;
                END IF;
                l_content:=l_content || '<tr><td>' || LTRIM(RTRIM(C.location,','),',') || '</td><td>' || C.nb_visits || ' (' || TO_CHAR(C.pct*100,'fm990D00') || '%)</td></tr>';
            END LOOP;

        IF (pOffset=0) THEN
            l_content:=l_content || 
            '</tbody></table>';
        END IF;

        pHtml:=l_content;
    END;

    PROCEDURE getVisitsByBrowser(pWebsiteId IN website.id%type, pOffset IN NUMBER, pUrl IN VARCHAR2, pCount IN OUT NUMBER, pHtml IN OUT NOCOPY CLOB)  IS
        l_content CLOB;
        n PLS_INTEGER:=0;
    BEGIN
        IF (pOffset=0) THEN
            l_content:=
            '<table role="presentation">
                <thead>
                    <tr>
                        <th>Browser</th>
                        <th>No. Visits</th>
                    </tr>
                </thead>
                <tbody>';
        END IF;

        FOR C IN (
                    SELECT browser,  nb_visits, RATIO_TO_REPORT(nb_visits) OVER() pct, COUNT(*) OVER() total
                    FROM
                        (
                        SELECT browser, COUNT(*) nb_visits, COUNT(*) OVER() total_visits
                          FROM page_hit p
                         WHERE p.website_id=pWebsiteId
                           AND p.url=pUrl
                         GROUP BY p.browser
                        )
                        ORDER BY nb_visits DESC, browser
                        OFFSET pOffset ROWS
                        FETCH FIRST ROWS_PER_PAGE ROWS ONLY
            ) LOOP
                n:=n+1;
                IF (n=1) THEN
                    pCount:=C.total;
                END IF;
                l_content:=l_content || '<tr><td>' || LTRIM(RTRIM(C.browser,','),',') || '</td><td>' || C.nb_visits || ' (' || TO_CHAR(C.pct*100,'fm990D00') || '%)</td></tr>';
            END LOOP;

        IF (pOffset=0) THEN
            l_content:=l_content || 
            '</tbody></table>';
        END IF;

        pHtml:=l_content;
    END;

    PROCEDURE getEngagement(pWebsiteId IN website.id%type, pOffset IN NUMBER, pTimeZone IN VARCHAR2, pUrl IN VARCHAR2, pCount IN OUT NUMBER, pHtml IN OUT NOCOPY CLOB)  IS
        l_content CLOB;
        n PLS_INTEGER:=0;
    BEGIN
        IF (pOffset=0) THEN
            l_content:=
            '<table role="presentation" style="font-size:var(--step--2)">' ||
                '<caption style="padding-block-end:1rem"><span style="font-stretch:120%;font-weight:550">Engaged page views ordered by popularity for first time and repeat visitors</span>' ||
                    '<br>Visitors are engaged when viewing content for more than 10 seconds' ||
                    '<br>Bounce rate is percentage of all unengaged visits' ||
                    '<br>Engagement is at 75 percentile across all visits' ||
                '</caption>' ||
                '<thead>' ||
                    '<tr>' ||
                        '<th>Page</th>' ||
                        '<th>First Visit</th>' ||
                        '<th>Repeat Visit</th>' ||
                        '<th>Engagement</th>' ||
                        '<th>Bounce</th>' ||
                    '</tr>' ||
                '</thead>' ||
                '<tbody>';
        END IF;

        FOR C IN (
            WITH pages AS
                (
                    SELECT navigation_label, article_id 
                    FROM website_article 
                    WHERE website_id=pWebsiteId
                    UNION ALL
                    SELECT wa.navigation_label || '/' || utl_i18n.unescape_reference(apex_escape.striphtml(REGEXP_SUBSTR(a.body_html,'<h[1-4]>(.+?)<\/h[1-4]>',1,1))), a.id 
                    FROM website_article wa, article a
                    WHERE a.parent_id=wa.article_id
                    AND wa.website_id=pWebsiteId
                ),
                sessions AS
                (
                    SELECT p.navigation_label, ROW_NUMBER() OVER (PARTITION BY ph.ip_address ORDER BY ph.visit_date) visit, SUM(CASE WHEN ph.duration_visible>10 THEN 1 ELSE 0 END) engaged, MAX(ph.duration_visible) duration_visible
                      FROM pages p, page_hit ph
                     WHERE ph.website_id=pWebsiteId
                       AND ph.url=pUrl
                       AND ph.article_id=p.article_id
                     GROUP BY ph.visit_date, ph.ip_address, p.navigation_label
                ),
                dataset AS
                (
                    SELECT  navigation_label, SUM(CASE WHEN visit=1 AND engaged=1 THEN 1 ELSE 0 END) first_time, SUM(CASE WHEN visit>1 AND engaged=1 THEN 1 ELSE 0 END) repeat_visit, SUM(visit) total_visits, SUM(CASE WHEN engaged=0 THEN 1 ELSE 0 END) bounce, 
                    APPROX_PERCENTILE(0.75 DETERMINISTIC) WITHIN GROUP (ORDER BY duration_visible) duration_visibleP75
                    FROM sessions
                    GROUP BY navigation_label 
                )
                SELECT navigation_label, first_time, RATIO_TO_REPORT(first_time) OVER () pct1, repeat_visit, RATIO_TO_REPORT(repeat_visit) OVER () pct2, ROUND((bounce/total_visits)*100) bounce_rate, COUNT(*) OVER () total, duration_visibleP75
                FROM dataset 
                ORDER BY 2 DESC
                OFFSET pOffset ROWS
                FETCH FIRST ROWS_PER_PAGE ROWS ONLY) 
        LOOP
            n:=n+1;
            IF (n=1) THEN
                pCount:=C.total;
            END IF;
            l_content:=l_content ||
            '<tr>' ||
                '<td>'|| C.navigation_label || '</td>' ||
                '<td>'|| C.first_time || ' (' || CASE WHEN C.pct1<.01 THEN '<1' ELSE TO_CHAR(C.pct1*100,'fm990') END || '%)</td>' ||
                '<td>'|| C.repeat_visit || ' (' || CASE WHEN C.pct2<.01 THEN '<1' ELSE TO_CHAR(C.pct2*100,'fm990') END || '%)</td>' ||
                '<td>'|| elapsedTime(C.duration_visibleP75) ||'</td>' ||
                '<td>'|| C.bounce_rate || '%</td>' ||
            '</tr>';
        END LOOP;

        IF (pOffset=0) THEN
            l_content:=l_content || 
            '</tbody></table>';
        END IF;

        pHtml:=l_content;
    END;

    PROCEDURE getWebsiteTrends(pWebsiteId IN website.id%type, pTimeZone IN VARCHAR2, pUrl IN VARCHAR2, pHtml IN OUT NOCOPY CLOB) IS
        l_end_date page_hit.visit_date%type;
        l_days_diff NUMBER;
        l_days_period PLS_INTEGER:=7;
        l_title VARCHAR2(200);
        l_legend VARCHAR2(200);
        l_graph CLOB;
        l_y_axis_width PLS_INTEGER:=6; 
        l_bar_width PLS_INTEGER:=7;
        l_gap NUMBER;
        l_pct_total NUMBER;
        l_pct_first NUMBER;
        l_start_x NUMBER;
        l_footer VARCHAR2(2000);
        l_table VARCHAR2(4000);
    BEGIN
        SELECT MAX(visit_date) end_date, TRUNC(MAX(visit_date))-TRUNC(MIN(visit_date)) 
          INTO l_end_date, l_days_diff
          FROM page_hit
         WHERE website_id=pWebsiteid
           AND url=pUrl;

        l_start_x:=l_y_axis_width+0.5;
        l_gap:=(100-l_y_axis_width-0.5 -(10*l_bar_width))/9;

        /* Depending on number of days since website has visits set reporting period to highest multiple of 7-day periods  */
        IF (l_days_diff<147) THEN
            l_days_period:=1;
        ELSE
            FOR i IN REVERSE 1..4  LOOP
                IF (l_days_diff/(i*7)>=10) THEN
                    l_days_period:=i*7;
                    EXIT;
                END IF;
            END LOOP;
        END IF;

        l_title:='Website visits in ' || l_days_period || ' day periods';
        l_legend:='Last visit recorded ' || TO_CHAR(l_end_date at time zone pTimeZone,'Mon dd, YYYY hh24:mipm');

        l_graph:=
        '<svg width="100%" aria-labelledby="graph-title graph-desc" role="img">' ||
        '<style>' || 
            '.y-axis {' ||
                'stroke: slategrey;' ||
                'stroke-width: 2;' ||
            '}' ||
            '.x-axis {' ||
                 'stroke: slategrey;' ||
                'stroke-width: 0.5;' ||
            '}' ||
            'text {' ||
                'font-family:system-ui;' ||
                'font-size: var(--step--1);' ||
                'font-weight: 650;' ||
            '}' ||
            '.total {' ||
                'fill: var(--color-primary-lighter);' ||
            '}' ||
            '.first {' ||
                'fill: var(--color-primary);' ||
            '}' ||
            '.label {' ||
               'font-size: var(--step--2);' ||
            '}' ||
            '@media (max-width: 640px) {' ||
                '.x-axis {' ||
                    'height:2.5lh;' ||
                '}' ||
                '.label {' ||
                    'writing-mode: vertical-rl;' ||
                    'font-size: 70%;' ||
                '}' || 
                '[dominant-baseline="hanging"] {' ||
                    'visibility: hidden;' ||
                '}' || 
            '}' ||
        '</style>' ||
        '<title id="graph-title">Website visit trends</title>' ||
        '<desc id="graph-desc">' || 'Website visits in ' || l_days_period || ' day periods</desc>' ||
        '<text x="50%" y="30" dominant-baseline="middle" text-anchor="middle">' || l_title || '</text>' ||
        '<text x="50%" y="70" dominant-baseline="middle" text-anchor="middle">' || l_legend || '</text>' ||
        '<rect  x="33%" y="100" width="10%" height="50" class="total" />' ||
        '<text x="38%" y="125" alignment-baseline="middle" text-anchor="middle" fill="white" stroke="white" >Total</text>' ||
        '<rect  x="50%" y="100" width="10%" height="50" class="first" />' ||
        '<text x="55%" y="125" alignment-baseline="middle" text-anchor="middle" fill="white" stroke="white" >First</text>' ||
        '</svg>';
        
        FOR C IN (
            WITH end_date AS
            (
                SELECT l_end_date-((level-1) * l_days_period) end_date
                FROM dual CONNECT BY level<=CASE WHEN l_days_period=1 THEN 10 ELSE l_days_period END
            ),
            range AS
            (
                SELECT end_date + INTERVAL '1' SECOND start_date, LEAD(end_date) OVER (ORDER BY end_date) end_date 
                FROM end_date
            ),
            website_hit AS
            (
                SELECT p.visit_date, ROW_NUMBER() OVER (PARTITION BY p.ip_address ORDER BY p.visit_date) visit_count, COUNT(*) visits, MAX(lcp) lcp, MAX(cls) cls, MAX(inp) inp
                FROM page_hit p
                WHERE p.website_id=pWebsiteid
                AND url=pUrl
                GROUP BY p.ip_address, p.visit_date
            ),
            dataset AS
            (
            SELECT start_date, end_date, 
                SUM(visits) total_visits, 
                SUM(CASE WHEN visit_count=1 THEN 1 ELSE 0 END) first_time_visits, 
                APPROX_PERCENTILE(0.75 DETERMINISTIC) WITHIN GROUP (ORDER BY lcp) lcp75,
                APPROX_PERCENTILE(0.75 DETERMINISTIC) WITHIN GROUP (ORDER BY cls) cls75,
                APPROX_PERCENTILE(0.75 DETERMINISTIC) WITHIN GROUP (ORDER BY inp) inp75
            FROM range, website_hit p
            WHERE p.visit_date BETWEEN start_date AND end_date
            AND end_date IS NOT NULL
            GROUP BY start_date, end_date
            ORDER BY end_date DESC NULLS LAST
                FETCH FIRST 10 ROWS ONLY
            )
            SELECT start_date, end_date, total_visits, first_time_visits, lcp75, cls75, inp75, 
                MAX(total_visits) OVER () max_visits, 
                ROW_NUMBER() OVER (ORDER BY start_date) rn,
                COUNT(*) OVER () nb
            FROM dataset
            ORDER BY start_date
        )
        LOOP
            IF (C.rn=1) THEN
                l_graph:=l_graph || 
                '<svg width="100%" height="60vh" role="img">';
                
                /* Draw Y-axis */
                l_graph:=l_graph || 
                '<!-- Y AXIS -->' ||
                '<line x1="' || l_y_axis_width || '%" y1="0%" x2="' || l_y_axis_width || '%" y2="100%" class="y-axis"/>';

                /* Draw horizontal lines for each 20% of max visits in computed range */
                FOR i IN 1..5 LOOP
                    l_graph:=l_graph || CASE WHEN i=1 THEN '<!-- Y AXIS LABELS -->' END ||
                    '<line x1="6%" y1="' || TO_CHAR((i-1)*20) || '%" x2="100%" y2="' || TO_CHAR((i-1)*20) || '%" class="x-axis"/>' ||
                    '<text x="3%" y="' || TO_CHAR((i-1)*20) || '%" dominant-baseline="' || CASE WHEN i=1 THEN 'hanging' ELSE 'central' END || '" text-anchor="middle" class="label">' || ROUND(C.max_visits*(100-((i-1)*20))/100) || '</text>';
                END LOOP;
            END IF;

            l_pct_total:=C.total_visits/C.max_visits*100;
            l_pct_first:=C.first_time_visits/C.max_visits*100;
            

            /* Draw bar chart using percentages */
            l_graph:=l_graph || CASE WHEN C.rn=1 THEN '<!-- BAR CHART -->' END ||
            '<rect x="' || l_start_x || '%" y="' || ROUND(100-l_pct_total,2) || '%" width="' || l_bar_width || '%" height="' || ROUND(l_pct_total,2) || '%" class="total"/>' || 
            '<rect x="' || l_start_x || '%" y="' || ROUND(100-l_pct_first,2) || '%" width="' || l_bar_width || '%" height="' || ROUND(l_pct_first,2) || '%" class="first"/>';

            l_table:=l_table || 
            '<tr><td>' || TO_CHAR(C.start_date,'Mon dd yy hh24:mi:ss') || '</td><td>' || TO_CHAR(C.end_date at time zone pTimeZone,'Mon dd yy hh24:mi:ss') || '</td><td>' || C.total_visits || '</td><td>' || C.first_time_visits || '</td></tr>';

            /* Print dates in footer */
            l_footer:=l_footer || CASE WHEN C.rn=1 THEN '<!-- X AXIS LABELS -->' END ||
            '<text x="' || TO_CHAR(l_start_x+1) || '%" y="15" dominant-baseline="middle" text-anchor="start" class="label">' || TO_CHAR(C.end_date at time zone pTimeZone,'fmMon dd') || '</text>';

            IF (C.rn=C.nb) THEN
                l_graph:=l_graph || 
                '</svg>' ||
                '<svg width="100%" height="1lh" role="img" class="x-axis">' || 
                     l_footer || 
                '</svg>' ||
                '<table style="text-align:center">' ||
                    '<thead><tr><th>Start</th><th>End</th><th>Total Visits</th><th>First Time Visits</th></tr></thead>' || 
                    '<tbody>' || l_table || '</tbody>' ||
                '</table>';
            ELSE
                l_start_x:=ROUND(l_start_x+l_bar_width+l_gap,2);
            END IF;

        END LOOP;

        pHtml:=l_graph;
    END;

    /* 
    **  ENTRY POINT FOR ALL VISIT REPORTS
    */
    PROCEDURE getVisits(pWebsiteId IN website.id%type, pReport IN VARCHAR2, pOffset IN NUMBER, pStatus OUT NUMBER) IS
        l_session_data pck_sec.t_session_data;
        l_header LONG;
        l_article CLOB;
        l_footer LONG;
        l_count NUMBER;
        n PLS_INTEGER;
    BEGIN
        l_session_data:=pck_sec.getSessionData(pWebsiteId);

        IF (pReport='list') THEN
            l_header:=
            '<ul role="list" class="flex-items">' || 
                '<li><button class="button" type="button" data-report="visits" data-report-type="table" data-button-variant="small">Visits</button></li>' ||
                '<li><button class="button" type="button" data-report="trends" data-report-type="graph" data-button-variant="small">Trends</button></li>' ||
                '<li><button class="button" type="button" data-report="performance" data-report-type="graph" data-button-variant="small">Performance</button></li>' ||
                '<li><button class="button" type="button" data-report="engagement" data-report-type="table" data-button-variant="small">Engagement</button></li>' ||
                '<li><button class="button" type="button" data-report="location" data-report-type="table" data-button-variant="small">Locations</button></li>' ||
                '<li><button class="button" type="button" data-report="browser" data-report-type="table" data-button-variant="small">Browsers</button></li>' ||
                '<li><button class="button" type="button" data-report="latest" data-report-type="table" data-button-variant="small">Latest</button></li>' ||
            '</ul>';
            l_article:=
            '<h4>Real User Monitoring</h4>' ||
            '<p>When visitors download your website we capture details about their experience, one of the most important being how long they had to wait before being able to view the content.</p>' ||
            '<p>Equally important is how long they engaged with the content.</p>' ||
            '<p>Was it their first visit? How many pages did they view? How were they referred to the site? How much data was downloaded? What was their location and connection speed?</p>' ||
            '<p>Real User Monitoring collects these details so that owners can measure their site performance as experienced by real users.</p>';
            l_footer:=
            '<span></span>' ||
            '<button type="button" class="button show-more visually-hidden" data-button-variant="no-styles">More &gt;&gt;</button>';
        ELSE
            CASE pReport
                WHEN 'visits' THEN getWebsiteVisits(pWebsiteId, pOffset, l_session_data.timezone, l_session_data.url, l_count, l_article);
                WHEN 'performance' THEN getPerformance(pWebsiteId, l_session_data.timezone, l_session_data.url, l_article);
                WHEN 'location' THEN getVisitsByLocation(pWebsiteId, pOffset, l_session_data.url, l_count, l_article);
                WHEN 'browser' THEN getVisitsByBrowser(pWebsiteId, pOffset, l_session_data.url, l_count, l_article);
                WHEN 'engagement' THEN getEngagement(pWebsiteId, pOffset, l_session_data.timezone, l_session_data.url, l_count, l_article);
                WHEN 'trends' THEN getWebsiteTrends(pWebsiteId, l_session_data.timezone, l_session_data.url, l_article);
                WHEN 'latest' THEN 
                    n:=uploadPageHits(pWebsiteId);
                    l_article:=
                    '<h4>' || n || ' Page Views uploaded</h4>' ||
                    '<table role="presentation"><tbody><tr></tr></tbody></table>';
            END CASE;
        END IF;
        
        apex_json.open_object; 
        apex_json.write('success', TRUE);
        apex_json.write('header', l_header);
        apex_json.write('article', l_article);
        apex_json.write('footer', l_footer);
        apex_json.write('count', l_count);
        apex_json.write('offset', pOffset + ROWS_PER_PAGE);
        apex_json.close_object;

        pStatus:=200;

        pck_sec.updateCpuUsed(pUserid=>l_session_data.user_id, pCpuUsedStart=>l_session_data.cpu_used_session);

    EXCEPTION WHEN OTHERS THEN
        pck_core.log_error(pStatus);

    END;

    /*
    **  DAILY JOB TO PROCESS ANY VISITS WAITING IN WEBSITE_ARTICE_CWV TABLE 
    */
    PROCEDURE daily_job IS
        l_content VARCHAR2(300);
        n PLS_INTEGER;
    BEGIN
        /* Set Administrator user id for logging */
        FOR C IN (
            SELECT u.id
              FROM apex_workspace_apex_users w, users u 
             WHERE w.email=u.email
               AND w.is_admin='Yes'
               FETCH FIRST ROW ONLY
        ) LOOP
            pck_sec.g_session_user_id:=C.id;
        END LOOP;

        FOR C IN (SELECT id, domain_name FROM website WHERE netlify_site_id_custom IS NOT NULL) LOOP
            pck_core.log('START visit data processing for ' || C.domain_name);
            n:=uploadPageHits(C.id);
            COMMIT;
            pck_core.log('END visit data processing for ' || C.domain_name || ' - ' || n || ' page views');
        END LOOP;
    END;
    
END;
/