*,
::after,
::before {
  box-sizing: border-box;
}

body {
  font-family: var(--font-family);
  font-size: var(--step-0);
  line-height: 1.4;
}
blockquote,
body,
figure,
h1,
h2,
h3,
h4,
p,
menu {
  margin: 0;
}
[role="list"], menu {
  padding: 0;
  list-style: none;
}
blockquote {
  font-style: italic;
  background: #f9f9f9;
  border-left: var(--space-3xs) solid var(--color-primary);
  margin-inline-start: var(--space-m);
}
blockquote > * {
  padding: var(--space-s);
}
img {
  max-width: 100%;
  width: 100%;
  height: auto;
  display: block;
  object-fit: cover;
}
.content-grid {
  --padding-inline: 1rem;
  --content-max-width: var(--max-width);
  --breakout-max-width: calc(var(--max-width) * 1.2);
  --breakout-size: calc(
    (var(--breakout-max-width) - var(--content-max-width)) / 2
  );
  display: grid;
  grid-template-columns: [full-width-start]minmax(var(--padding-inline), 1fr) [breakout-start]minmax(
      0,
      var(--breakout-size)
    ) [content-start]min(
      100% - (var(--padding-inline) * 2),
      var(--content-max-width)
    ) [content-end]minmax(0, var(--breakout-size)) [breakout-end]minmax(
      var(--padding-inline),
      1fr
    ) [full-width-end];
}
.content,
.content-grid > :not(.breakout, .full-width) {
  grid-column: content;
}
.breakout,
.content-grid > .breakout {
  grid-column: breakout;
}
.content-grid > .full-width,
.full-width {
  grid-column: full-width;
}
.full-width {
  display: grid;
  grid-template-columns: subgrid;
}
.curve {
  --block-size: 15vh;
  block-size: var(--block-size);
  inline-size: 100%;
  fill: var(--color-primary);
  transform: translateY(-1px);
}
.height-2x {
  --block-size: 20vh;
}
svg:nth-child(even of.curve) {
  transform: rotate(180deg) translateY(-1px);
}
:nth-child(even of article),
body>footer,
body>header,
body>nav {
  background-color: var(--color-primary);
  color: #fff;
}
.align-center {
  text-align: center;
}
.align-end {
  text-align: end;
}
body>header > * {
  padding: 0.5em 0.5em;
}
article {
  padding-block: 1em;
}
body>footer {
  padding-block-start: 1em;
}
.stick-top {
  position: sticky;
  top: 0;
  z-index: 1;
}
.flow > * + * {
  margin-block-start: var(--space-s);
}
.spaced-letters {
  letter-spacing: 0.2em;
}
h1,
h2,
h3,
h4,
p {
  font-size: var(--step-4);
  overflow-wrap: break-word;
}
h2,
h3,
h4,
p {
  font-size: var(--step-3);
}
h3,
h4,
p {
  font-size: var(--step-2);
}
h4,
p {
  font-size: var(--step-1);
}
p {
  font-size: var(--step-0);
  text-wrap: pretty;
}
small {
  font-size:var(--step--2);
}
h1,
h2,
h3,
h4 {
  text-wrap: balance;
}
a {
  text-decoration: none;
  color: inherit;
}

.no-padding {
  --padding: 0;
}
[data-font="75%"] {
  font-size: 75%;
}
[aria-current="page"] {
  padding-inline: var(--space-xs);
  background-color: #fff;
  color: var(--color-primary);
  border-radius: 0.25em;
}
.card {
  --card-radius: 0.5em;
  background: var(--color-primary);
  color: #fff;
  display: flex;
  flex-direction: column;
  gap: 1em;
  text-align: center;
  border: solid 2px #fff;
  border-radius: var(--card-radius);
  padding: 0.5em;
}
.card:focus-within,
.card:hover {
  box-shadow: 4px 8px 8px hsl(0deg 0% 0%/0.38);
}
.icon {
  pointer-events: none;
}
.card .icon {
  margin-inline: auto;
  inline-size: 25%;
  fill: #fff;
}
.card :is(h2, h3, h4),
footer :is(h2, h3, h4) {
  text-transform: uppercase;
  font-size: var(--step--1);
}
.card :is(p),
footer :is(p) {
  font-size: var(--step--2);
}
.card img {
  block-size: 16rem;
  border-radius: var(--card-radius);
}
.card p {
  hyphens: manual;
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
}
.card h2 {
  transition: all 0.2s ease-in-out;
}
.card:hover h2 {
  transform: scale(1.05);
  text-decoration: underline;
}
.card .ending-text {
  font-family: monospace;
  font-size: 40%;
  display: flex;
  justify-content: space-between;
  margin-block-start: auto;
}
.auto-fill {
  --grid-placement: auto-fill;
  --grid-min-item-size: clamp(10rem, 25vw, 20rem);
}
.grid-auto-fit {
  display: grid;
  grid-template-columns: repeat(
    var(--grid-placement, auto-fit),
    minmax(min(var(--grid-min-item-size, 16rem), 100%), 1fr)
  );
  grid-gap: 1em;
}
.round-border {
  border-radius: 50%;
}
.curved-border {
  border-radius: var(--space-m);
}
.color-yellow {
  color: #ff0;
}
.icon-with-text {
  display: flex;
  align-items: center;
  gap: 0.5em;
}
.icon-with-text > svg {
  width: 1em;
  height: 1em;
  fill: currentColor;
}
.condensed {
  line-height: 1.1;
}
.icon:has(+ .condensed) {
  align-self: flex-start;
}

/* VISUALLY-HIDDEN CAN'T BE SEEN EXCEPT TO ASSISTIVE TECHNOLOGY */

.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: auto;
  margin: 0;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}

form,
pre {
  padding: 1em;
}
form {
  --border: solid 1px var(--color-primary);
  display: flex;
  flex-direction: column;
  border: var(--border);
  border-radius: 0.5em;
  padding-block: 0;
  margin-block; 0;
}
form label {
  display: block;
  font-weight: 600;
}
form input,
form textarea {
  inline-size: 95%;
  font-size: var(--step-0);
}
form input {
  line-height: 2;
}
form textarea {
  resize: vertical;
  min-block-size: 5rem;
}

/* FLEX ITEMS */

.flex-items {
  display: flex;
  flex-direction: var(--flex-direction, row);
  flex-wrap: var(--flex-wrap, wrap);
  gap: var(--flex-gap, var(--gutter, var(--space-m)));
  justify-content: var(--flex-horizontal-alignment, flex-start);
  align-items: var(--flex-vertical-alignment, center);
}

.space-between {
  --flex-horizontal-alignment: space-between;
}
.justify-end {
  --flex-horizontal-alignment: flex-end;
}
.no-gap {
  --flex-gap: 0;
}

/* BUTTON STYLES */

.button {

  /* Configuration */
  --button-padding: 0.7em 1.2em;
  --button-gap: 0.5em;
  --button-bg: #342a21;
  --button-color: #ffffff;
  --button-hover-bg: #4b4b4a;
  --button-hover-color: #ffffff;
  --button-border-width: 3px;
  --button-border-style: solid;
  --button-border-color: var(--button-bg);
  --button-radius: 0.5em;

  /* Layout and spacing */
  display: inline-flex;
  align-items: center;
  gap: var(--button-gap);
  padding: var(--button-padding);

  /* Colours */
  background: var(--button-bg);
  color: var(--button-color);

  /* Stroke and radius */
  border-width: var(--button-border-width);
  border-style: var(--button-border-style);
  border-color: var(--button-border-color);
  border-radius: var(--button-radius);

  /* Typography */
  text-decoration: none;
  font-weight: var(--button-font-weight, 700);
  font-size: var(--button-font-size, 1em);
  letter-spacing: 0.05ch;
  font-family: sans-serif;
  line-height: 1.1;

  /* Interactive */
  cursor: pointer;
}

.button svg {
  height: var(--button-icon-size, 1.2cap);
  width: auto;   
  flex: none; 
}


.button:hover {
  background: var(--button-hover-bg);
  color: var(--button-hover-color);
}


.button:not(.no-focus):focus {
  outline-width: var(--button-outline-width, var(--button-border-width));
  outline-style: var(--button-outline-style, var(--button-border-style));
  outline-color: var(--button-outline-color, var(--button-border-color));
  outline-offset: var(
    --button-outline-offset,
    calc(var(--button-border-width) * 2)
  );
}


.button:active {
  transform: scale(99%);
}

.button[data-button-variant="round-icon"] {
    --button-padding: 0.25em;
    --button-bg: transparent;
    --button-color: currentColor;
    --button-radius: 50%;
    --button-border-color: currentColor;
}

.button[data-button-variant="round-icon"] svg {
    stroke: currentColor;
    stroke-width: 3px;
}

/* DIALOG STYLES */

html:has(dialog[open]) {
  overflow: hidden;
}

dialog {
  background-color: var(--color-background);
  color: var(--color-text);
  border-radius: var(--space-s);
  max-inline-size: min(90vw, 60ch);
  padding: 0;
  inset: 0;
  overflow: hidden;
}

dialog > form {
    display: grid;
    grid-template-rows: auto 1fr auto;
    align-items: start;
    max-block-size: 80vh;
    max-block-size: 80dvb;
}

dialog > form > header {
    border-block-end: 3px solid black;
}

dialog > form > article {
    overflow-y: auto; 
    max-block-size: 100%; /* safari */
    overscroll-behavior-y: contain;
}

dialog > form > footer {
    padding-block-end: var(--space-s);
}

.no-border {
  --border: none;
}


/* STYLES FOR PREFORMATTED CODE BLOCKS */

pre {
  background: rgba(199, 199, 199, 0.3);
  border: 1px solid #c4c4c4;
  border-radius: 2px;
  color: #353535;
  direction: ltr;
  font-style: normal;
  font-size: 70%;
  tab-size: 4;
  text-align: left;
  overflow-x: auto;
}
pre:has(code) {
  position: relative;
}
pre:has(code)::after {
  background: #000;
  color: #fff;
  position: absolute;
  font-size: 75%;
  padding: var(--space-3xs);
  right: 0;
  top: 0;
}
pre:has(.language-html)::after {
  content: "HTML";
}
pre:has(.language-css)::after {
  content: "CSS";
}
pre:has(.language-javascript)::after {
  content: "Javascript";
}
pre:has(.language-plsql)::after {
  content: "PL/SQL";
}
pre:has(.language-sql)::after {
  content: "SQL";
}


/* DROPDOWN STYLES */

.dropdown {
  display: inline-block;
  position: relative;
}

/* Hiding The disclosure widget */
.dropdown summary {
  list-style: none;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  gap: 1em;
  font-size: var(--step--1);
}

.dropdown summary::-webkit-details-marker {
  display: none; 
}

/* Detaching details content */
.dropdown .dropdown-content {
  position: absolute;
  min-inline-size: max-content;
  background-color: white;
  color: var(--color-primary);
  border: 1px solid #9b7aba;
  border-radius: 0.5em;
  right: 0;
  top: 2em;
  z-index: 1;
  list-style: none;
  margin: 0;
  padding: 0.75em 0.25em;
}

.dropdown button {
  display: block;
  color: var(--color-primary);
  background-color: transparent;
  padding: 0.5em 1.5em;
  border: none;
  inline-size: 100%;
  font-size: var(--step--1);
}

.dropdown button:hover, .dropdown button:focus {
  background-color: #9b7aba;
  color: white;
}

/* Closing the detail content on clicking anywhere else */
.dropdown details[open] summary::before {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  content: "";
  cursor: default;
}

.dropdown details summary rect {
  transition: transform 0.5s ease, opacity 0.5s ease;
}
.dropdown details[open] summary .top {
  transform: rotate(45deg) translate(7px, -3px);
}
.dropdown details[open] summary .middle {
  opacity: 0;
}
.dropdown details[open] summary .bottom {
  transform: rotate(-45deg) translate(-16px, -6px);
}

/* TABLE STYLES */

table {
  width: 100%;
  border-collapse: collapse;
  font-size: var(--step--1);
}
caption {
  padding: 0.5em;
}
thead {
  background-color: var(--color-primary);
  color: white;
  font-weight: 600;
}
th, td {
  border: 1px solid var(--color-primary);
  padding: var(--space-3xs);
}
td.centered {
  text-align: center;
  font-weight: 900;
}
td.centered span {
  display; inline-block;
  padding: 0.5ch;
  border-radius: 0.5ch;
}
.good {
  background: chartreuse;
}
.needs-improvement {
  background: orange;
}
.poor {
  background: red;
  color: white;
}