*,
*::before,
*::after {
  box-sizing: border-box;
}
body {
  font-family: var(--font-family);
  font-size: var(--step-0);
  line-height: 1.4;
  margin: 0;
}
h1,
h2,
h3,
h4,
p,
figure,
blockquote {
  margin: 0;
}
[role="list"] {
  padding: 0;
  list-style: none;
}
blockquote {
  font-style: italic;
  background: #f9f9f9;
  border-left: var(--space-3xs) solid var(--color-primary);
  margin-inline-start: var(--space-m);
}
blockquote > * {
  padding: var(--space-s);
}
img {
  max-width: 100%;
  width: 100%;
  height: auto;
  display: block;
  object-fit: cover;
}
.content-grid {
  --padding-inline: 1rem;
  --content-max-width: var(--max-width);
  --breakout-max-width: calc(var(--max-width) * 1.2);
  --breakout-size: calc(
    (var(--breakout-max-width) - var(--content-max-width)) / 2
  );
  display: grid;
  grid-template-columns: [full-width-start] minmax(var(--padding-inline), 1fr) [breakout-start] minmax(
      0,
      var(--breakout-size)
    ) [content-start] min(
      100% - (var(--padding-inline) * 2),
      var(--content-max-width)
    ) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(
      var(--padding-inline),
      1fr
    ) [full-width-end];
}
.content-grid > :not(.breakout, .full-width),
.content {
  grid-column: content;
}
.content-grid > .breakout,
.breakout {
  grid-column: breakout;
}
.content-grid > .full-width,
.full-width {
  grid-column: full-width;
}
.full-width {
  display: grid;
  grid-template-columns: subgrid;
}
.curve {
  --block-size: 15vh;
  block-size: var(--block-size);
  inline-size: 100%;
  fill: var(--color-primary);
  transform: translateY(-1px);
}
.height-2x {
  --block-size: 20vh;
}
svg:nth-child(even of .curve) {
  transform: rotate(180deg) translateY(-1px);
}
*:nth-child(even of article),
header,
nav,
footer {
  background-color: var(--color-primary);
  color: white;
}
.align-center {
  text-align: center;
}
header > * {
  margin-block-start: 1em;
}
article {
  padding-block: 1em;
}
footer {
  padding-block-start: 1em;
}
.stick-top {
  position: sticky;
  top: 0;
  z-index: 1;
}
.flow > * + * {
  margin-block-start: var(--space-s);
}
.spaced-letters {
  letter-spacing: 0.2em;
}
h1 {
  font-size: var(--step-4);
}
h2 {
  font-size: var(--step-3);
}
h3 {
  font-size: var(--step-2);
}
h4 {
  font-size: var(--step-1);
}
p,
h1,
h2,
h3,
h4 {
  overflow-wrap: break-word;
}
h1,
h2,
h3,
h4 {
  text-wrap: balance;
}
p {
  font-size: var(--step-0);
  text-wrap: pretty;
}
a {
  text-decoration: none;
  color: inherit;
}
.nav-label {
  text-decoration: none;
  color: white;
}
.flex-items {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
  gap: 1em;
  padding: 1em;
}
[data-font="75%"] :is(p) {
  font-size: 75%;
}
.selected {
  padding-inline: var(--space-xs);
  background-color: white;
  color: var(--color-primary);
  border-radius: 0.25em;
}
.card {
  --card-radius: 0.5em;
  background: var(--color-primary);
  color: white;
  display: flex;
  flex-direction: column;
  gap: 1em;
  text-align: center;
  border: solid 2px white;
  border-radius: var(--card-radius);
  padding: 0.5em;
}
.card:hover, .card:focus-within {
    box-shadow: 4.0px 8.0px 8.0px hsl(0deg 0% 0% / 0.38);
}
.icon {
  pointer-events: none;
}
.card .icon {
  margin-inline: auto;
  inline-size: 25%;
  fill: white;
}
.card :is(h2, h3, h4, h5, h6),
footer :is(h2, h3, h4, h5, h6) {
  font-size: var(--step-0);
  text-transform: uppercase;
}
.card img {
  block-size: 16rem;
  border-radius: var(--card-radius);
}
.card p {
  hyphens: manual;
  word-break: break-word;
  font-size: var(--step--1);
}
.card h2 {
  transition: all 0.2s ease-in-out;
}
.card:hover h2 {
  transform: scale(1.05);
  text-decoration: underline;
}
.card .ending-text {
  font-family: monospace;
  font-size: 40%;
  display: flex;
  justify-content: space-between;
  margin-block-start: auto;
}
.auto-fill {
  --grid-placement: auto-fill;
  --grid-min-item-size: clamp(10rem, 25vw, 20rem);
}
.grid-auto-fit {
  display: grid;
  grid-template-columns: repeat(
    var(--grid-placement, auto-fit),
    minmax(min(var(--grid-min-item-size, 16rem), 100%), 1fr)
  );
  grid-gap: 1em;
}
.round-border {
  border-radius: 50%;
}
.curved-border {
  border-radius: var(--space-m);
}
.color-yellow {
  color: yellow;
}
svg:has(symbol) {
  display: none;
}
.icon-with-text {
  display: flex;
  align-items: center;
  gap: 0.5em;
}
.icon-with-text > svg {
  width: 1em;
  height: 1em;
  fill: currentColor;
}
.condensed {
  line-height: 1.1;
}
.icon:has(+ .condensed) {
  align-self: flex-start;
}
form.contact {
  display: flex;
  flex-direction: column;
  border: solid 1px var(--color-primary);
  padding: 1em;
  border-radius: 0.5em;
  margin-top: var(--space-s);
}
form.contact label {
  display: block;
  font-weight: 600;
}
form.contact input {
  inline-size: 95%;
  line-height: 2;
  font-size: var(--step-0);
}
form.contact textarea {
  inline-size: 95%;
  resize: vertical;
  min-block-size: 5rem;
  font-size: var(--step-0);
}
form.contact button {
  border-radius: 1.5em;
  padding: 1rem 1.5em;
  letter-spacing: 0.2em;
  background-color: var(--color-primary);
  color: white;
  border: solid 1px white;
  cursor: pointer;
} /*** CODE BLOCKS*/
pre {
  background: hsla(0, 0%, 78%, 0.3);
  border: 1px solid #c4c4c4;
  border-radius: 2px;
  color: #353535;
  direction: ltr;
  font-style: normal;
  font-size: 70%;
  padding: 1em;
  tab-size: 4;
  text-align: left;
  overflow-x: auto;
}
pre:has(code) {
  position: relative;
  &::after {
    background: #000;
    color: #fff;
    position: absolute;
    font-size: 75%;
    padding: var(--space-3xs);
    right: 0;
    top: 0;
  }
}
pre:has(.language-html) {
  &::after {
    content: "HTML";
  }
}
pre:has(.language-css) {
  &::after {
    content: "CSS";
  }
}
pre:has(.language-javascript) {
  &::after {
    content: "Javascript";
  }
}
pre:has(.language-plsql) {
  &::after {
    content: "PL/SQL";
  }
}
pre:has(.language-sql) {
  &::after {
    content: "SQL";
  }
}
