CREATE OR REPLACE EDITIONABLE PACKAGE "PCK_CODEPEN" is
    --
    PROCEDURE getCodepen(pWebsiteId IN website.id%type, pArticleId IN article.id%type, pStatus OUT NUMBER);
    --
    PROCEDURE uploadCodepen(pId IN VARCHAR2, pZipFile IN BLOB);
    --
end;
/
CREATE OR REPLACE EDITIONABLE PACKAGE BODY "PCK_CODEPEN" is

    /*
    ** Build resources to open requested article in Codepen
    */
    PROCEDURE getCodepen(pWebsiteId IN website.id%type, pArticleId IN article.id%type, pStatus OUT NUMBER) IS
        l_domain_name website.domain_name%type;
        l_is_media BOOLEAN:=FALSE;
        l_html CLOB;
        l_css website.css%type;
        l_javascript CLOB;
        l_session_data pck_sec.t_session_data;
    BEGIN
        l_session_data:=pck_sec.getSessionData(pWebsiteId);


        /* Get page content */

        FOR C IN (
            SELECT w.css, w.domain_name, w.title, w.subtitle, w.header_effect, w.hero_asset_id, w.promotion, a.body_html, w.contact_email, w.telephone_number, w.mobile_number, w.linkedin_name, w.instagram_name, wa.collection_type
              FROM website w, website_article wa, article a
             WHERE w.id=pWebsiteId
               AND wa.website_id=w.id
               AND wa.article_id=a.id
               AND a.id=pArticleId
        ) LOOP
            l_domain_name:=C.domain_name;
            l_html:=C.body_html;
            l_is_media:=C.collection_type='MEDIA';
            buildBodyHtml(
                l_session_data.user_id, 
                pWebsiteId,
                'TEST', /* TEST environemt for Codepen */
                pck_core.getresturl(),
                pArticleId, 
                C.collection_type, 
                l_is_media, 
                C.header_effect,
                C.hero_asset_id,
                C.contact_email,
                C.telephone_number, 
                C.mobile_number, 
                C.linkedin_name,
                C.instagram_name,
                C.promotion,
                l_html);

            l_html:=l_html || '</body>';

            /* Import font-face first for codepen */
            FOR C1 IN (
                SELECT DISTINCT f.family
                  FROM font f, website_font wf
                 WHERE f.id=wf.font_id
                   AND wf.website_id=pWebsiteId
            ) LOOP
                l_css:=l_css ||
                '@import url("https://fonts.googleapis.com/css2?family=' || REPLACE(C1.family,' ','+') || '");' || chr(10);
            END LOOP;

            l_css:=l_css || buildCSSRoot(pWebsiteId);

            /* Append either author-uploaded CSS or mine  */
            IF (C.css IS NOT NULL) THEN
                l_css:=l_css || C.css;
            ELSE
                FOR C IN (
                    SELECT apex_util.blob_to_clob(file_content) file_content
                      FROM apex_application_static_files 
                     WHERE application_id=101
                       AND file_name='deploy.css'
                ) LOOP
                    l_css:=l_css || C.file_content;
                END LOOP;
            END IF;
        END LOOP;

        apex_json.open_object;
        apex_json.write('success', TRUE); 
        apex_json.write('domain_name', l_domain_name);
        apex_json.write('html', l_html);
        apex_json.write('css', l_css);
        apex_json.write('js', l_javascript);
        apex_json.close_object;

        pStatus:=200;

        EXCEPTION WHEN OTHERS THEN 
            pck_core.log_error;
    END;

    /*
     **  Update website HTML / CSS from the contents of an exported Codepen zip file
     */        
    PROCEDURE uploadCodepen(pId IN VARCHAR2, pZipFile IN BLOB) IS
        l_website_id website.id%type;
        l_article_id article.id%type;
        l_css CLOB;
        l_header CLOB;
        l_main CLOB;
        l_footer CLOB;
        l_body_html CLOB;
        l_zip BLOB:=pZipFile;
        l_files apex_zip.t_files;
        l_session_data pck_sec.t_session_data;
        l_nb_files PLS_INTEGER:=0;
        l_ddl VARCHAR2(500);
        l_deploy_css CLOB;
        l_updated_columns apex_t_varchar2:=apex_t_varchar2();
        l_updated_files apex_t_clob:=apex_t_clob();

        PROCEDURE send_json(pMessage IN VARCHAR2) IS
            l_message VARCHAR2(200);
        BEGIN
            IF (l_updated_files.COUNT>0) THEN
                l_message:='UPLOADED: ' || apex_string.join(l_updated_columns,',');
            END IF;
            apex_json.open_object;
            apex_json.write('success', TRUE);
            apex_json.write('message', l_message || pMessage);
            apex_json.close_object;
        END;

    BEGIN
        

        /* pId contains website_id,article_id */
        l_website_id:=SUBSTR(pId,1,INSTR(pId,',')-1);
        l_article_id:=SUBSTR(pId,INSTR(pId,',')+1);

        l_session_data:=pck_sec.getSessionData(l_website_id);

        l_files:=apex_zip.get_files(p_zipped_blob => l_zip);

        FOR i in 1 .. l_files.COUNT LOOP
            IF (INSTR(l_files(i),'/src/style.css')>0) THEN
                l_css:=apex_util.blob_to_clob(p_blob => apex_zip.get_file_content(p_zipped_blob => l_zip, p_file_name => l_files(i)));
                l_nb_files:=l_nb_files+1;
            ELSIF (INSTR(l_files(i),'/src/index.html')>0) THEN
                l_body_html:=REPLACE(apex_util.blob_to_clob(p_blob => apex_zip.get_file_content(p_zipped_blob=>l_zip, p_file_name=>l_files(i))),chr(10));
                l_nb_files:=l_nb_files+1;
            END IF;
        END LOOP;

        IF (l_nb_files<2) THEN
            apex_json.open_object;
            apex_json.write('success', FALSE);
            apex_json.write('message', '** ZIP MUST INCLUDE FILES "/src/index.html", "/src/css.styles" **');
            apex_json.close_object;
            RETURN;
        END IF;

        FOR C IN (SELECT css, header, footer FROM website WHERE id=l_website_id) LOOP
            
            SELECT apex_util.blob_to_clob(file_content)
              INTO l_deploy_css
              FROM apex_application_static_files 
             WHERE application_id=101
               AND file_name='deploy.css';

            /* 
            ** remove :root css pre-pended when codepen was created 
            ** 'n' handles case where user formats the css in codepen before exporting
            ** Note that we want to retain user formatting uploaded to the css column
            */
            l_css:=regexp_replace(l_css,':root(.*?)}',null,1,1,'n');

            IF (l_css IS NULL) THEN
                apex_string.push(l_updated_columns,'CSS');
                apex_string.push(l_updated_files,l_css);
            ELSIF (dbms_lob.compare(REPLACE(l_deploy_css,chr(10)),REPLACE(l_css,chr(10)))<>0) THEN
                apex_string.push(l_updated_columns,'CSS');
                apex_string.push(l_updated_files,l_css);
            END IF;

            /*
            ** header and footer are the first and last elements of class "section" in l_body_html
            */

            l_header:=regexp_substr(l_body_html,'<header class="section.+?>(.+?)</header>',1,1,'n',1);
            l_header:=regexp_replace(l_header,'<aside class="login.+?</aside>');
            l_header:=TRIM(l_header);
            IF (l_header IS NULL AND C.header IS NOT NULL) THEN
                apex_string.push(l_updated_columns,'HEADER');
                apex_string.push(l_updated_files,l_header);
            ELSIF (dbms_lob.compare(l_header,NVL(C.header,'x'))<>0) THEN
                apex_string.push(l_updated_columns,'HEADER');
                apex_string.push(l_updated_files,l_header);
            END IF;

            l_footer:=regexp_substr(l_body_html,'<footer class="section.+?>(.+?)</footer>',1,1,'n',1);
            l_footer:=TRIM(l_footer);
            IF (l_footer IS NULL AND C.footer IS NOT NULL) THEN
                apex_string.push(l_updated_columns,'FOOTER');
                apex_string.push(l_updated_files,l_footer);
            ELSIF (dbms_lob.compare(REPLACE(l_footer,chr(10)),REPLACE(NVL(C.footer,'x'),chr(10)))<>0) THEN
                apex_string.push(l_updated_columns,'FOOTER');
                apex_string.push(l_updated_files,l_footer);
            END IF;

            FOR i IN 1..l_updated_columns.COUNT LOOP
                IF (i=1) THEN
                    l_ddl:='UPDATE website SET updated_date=current_timestamp';
                END IF;
                CASE l_updated_columns(i)
                    WHEN 'CSS' THEN l_ddl:=l_ddl || ',css=:B' || i;
                    WHEN 'HEADER' THEN l_ddl:=l_ddl || ',header=:B' || i;
                    WHEN 'FOOTER' THEN l_ddl:=l_ddl || ',footer=:B' || i;
                END CASE;
            END LOOP;

            IF (l_ddl IS NOT NULL) THEN
                l_ddl:=l_ddl || ' WHERE id=:B';
                CASE l_updated_columns.COUNT
                    WHEN 1 THEN EXECUTE IMMEDIATE l_ddl USING l_updated_files(1), l_website_id;
                    WHEN 2 THEN EXECUTE IMMEDIATE l_ddl USING l_updated_files(1), l_updated_files(2), l_website_id;
                    WHEN 3 THEN EXECUTE IMMEDIATE l_ddl USING l_updated_files(1), l_updated_files(2), l_updated_files(3), l_website_id;
                END CASE;
            END IF;
        END LOOP;

        /*
        ** EXTRACT AND PROCESS HTML ELEMENT
        */
        l_main:=regexp_substr(l_body_html,'<main.+?</main>');
        IF (INSTR(l_main,'<pre>')>0) THEN
            apex_json.open_object;
            apex_json.write('success', TRUE);
            apex_json.write('message', CASE WHEN l_updated_files.COUNT>0 THEN 'UPLOADED: ' || apex_string.join(l_updated_columns,',') END || ' - ** &lt;main&gt; SKIPPED - CONTAINS &lt;PRE&gt; ELEMENT **');
            apex_json.close_object;
            RETURN;
        END IF;
        
        /* Remove elements added in getCodepen procedure */
        l_main:=regexp_replace(regexp_replace(regexp_replace(l_main,
            '<ol class="featured.+?</ol>'),
            '<main.+?>'),
            '</main>');
        
        FOR C IN (SELECT body_html FROM article WHERE id=l_article_id) LOOP
            IF (dbms_lob.compare(C.body_html,l_main)<>0) THEN
                UPDATE article SET body_html=l_main, updated_date=current_timestamp WHERE id=l_article_id;
                apex_string.push(l_updated_columns,'MAIN');
            END IF;
        END LOOP;

        apex_json.open_object;
        apex_json.write('success', TRUE);
        apex_json.write('message', CASE WHEN l_updated_files.COUNT>0 THEN 'UPLOADED: ' || apex_string.join(l_updated_columns,',') ELSE 'NO CHANGES' END );
        apex_json.write('html',l_main);
        apex_json.close_object;

        EXCEPTION
            WHEN OTHERS THEN
                pck_core.log_error;
    END;    
end;
/