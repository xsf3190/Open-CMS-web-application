CREATE OR REPLACE EDITIONABLE PACKAGE "PCK_CODEPEN" is
    --
    PROCEDURE getCodepen(pArticleId IN article.id%type);
    --
    PROCEDURE uploadCodepen(pId IN VARCHAR2, pZipFile IN BLOB);
    --
    --PROCEDURE buildBodyHtml(pWebsiteId IN website.id%type, pArticleId IN article.id%type, pHeader IN CLob, pFooter IN Clob, pHtml IN OUt NOCOPY CLOB);
end;
/
CREATE OR REPLACE EDITIONABLE PACKAGE BODY "PCK_CODEPEN" is

    g_curve CONSTANT VARCHAR2(100):='<svg class="curve full-width" aria-hidden="true" focusable="false"><use href="#curve"></use></svg>';
    g_curve_last CONSTANT VARCHAR2(100):='<svg class="curve full-width" aria-hidden="true" focusable="false"><use href="#curve"></use></svg>';
    
    TYPE tt_nav_labels IS RECORD (
        article_id website_article.article_id%type,
        navigation_label website_article.navigation_label%type
    );
    TYPE t_nav_labels IS TABLE OF tt_nav_labels;
    g_nav_labels t_nav_labels;

    FUNCTION buildNavLabels(pArticleId IN article.id%type) RETURN VARCHAR2 IS
        l_nav_labels LONG;
    BEGIN
        l_nav_labels:=
        '<nav aria-label="Main Navigation" class="content-grid">' || 
            '<div class="flex-items">';
        FOR i IN 1..g_nav_labels.COUNT LOOP
            l_nav_labels:=l_nav_labels || 
                '<a href="#" class="nav-label' || 
                    CASE WHEN g_nav_labels(i).article_id=pArticleId THEN ' selected' END  || 
                    '" data-id="' || g_nav_labels(i).article_id || '">' || g_nav_labels(i).navigation_label || '</a>';
        END LOOP;
        l_nav_labels:=l_nav_labels || 
            '</div>' ||
        '</nav>';

        RETURN (l_nav_labels);
    END;

    /*
    ** HTML document body structured as
    **
    ** <header>
    ** <nav>
    ** <main>
    ** <footer>
    ** <svg>
    */

    PROCEDURE buildBodyHtml(
        pUserId IN users.id%type, 
        pWebsiteId IN website.id%type, 
        pArticleId IN article.id%type, 
        pCollectionType IN website_article.collection_type%type, 
        pIsMedia IN BOOLEAN, 
        pContactForm IN website_article.contact_form%type, 
        pHeader IN CLOB, 
        pFooter IN CLOB, 
        pHtml IN OUt NOCOPY CLOB) 
    IS
        l_featured_html CLOB;
        l_thumbnails CLOB;
        l_email users.email%type;
        l_icon_id icon.id%type;
        l_icons apex_t_varchar2:=apex_t_varchar2();
        l_svg_html CLOB;
        nb_articles PLS_INTEGER;
        n PLS_INTEGER;

    BEGIN
        IF (g_nav_labels IS NULL) THEN
            SELECT wa.article_id, wa.navigation_label
              BULK COLLECT INTO g_nav_labels
              FROM website w, website_article wa
             WHERE w.id=pWebsiteId
               AND wa.website_id=w.id
             ORDER BY wa.display_order;
        END IF;

        /* 
        ** Create section for any featured articles
        */
        IF (INSTR(pHtml,'<article class="featured">')>0) THEN
            FOR C IN (
                SELECT wa.article_id
                  FROM website_article wa
                 WHERE wa.website_id=pWebsiteId
                   AND EXISTS (
                            SELECT null FROM article a WHERE a.parent_id=wa.article_id AND a.featured='YES'
                        )
            )
            LOOP
                l_featured_html:=l_featured_html || pck_core.buildBlogList(pWebsiteId, C.article_id, pIncludeLinks => FALSE, pClasses => 'featured');
            END LOOP;
            pHtml:=REPLACE(pHtml,'<article class="featured">','<article class="featured">' || l_featured_html);
        END IF;

        /* Enclose content in <article> element if none exists */
        IF (INSTR(pHtml,'<article')=0) THEN
            pHtml:='<article class="flow">' || pHtml || '</article>';
        END IF;

        /* Remove empty elements */
        pHtml:=REPLACE(pHtml,'<h1>&nbsp;</h1>',null);

        /* <article> signifies start of page section - insert svg to show curved sections */
        pHtml:=REPLACE(pHtml,'<article',g_curve || '<article');

        /* Remove any inline styles - pages are deployed with strict Content Security policy */
        pHtml:=REGEXP_REPLACE(pHtml,' style="[^"]*"');

        /* Construct start of <main> element */
        pHtml:='<main class="content-grid">' || pHtml;
    
        /* Build index if page is index of Blog / Media / Product */
        IF (pCollectionType='BLOG') THEN
            pHtml:=pHtml || pck_core.buildBlogList(pWebsiteId, pArticleId, pIncludeLinks => FALSE);
        ELSIF (pCollectionType='MEDIA') THEN
            pHtml:=pHtml || pck_core.buildMediaList(pWebsiteId, pArticleId, pIncludeLinks => FALSE);
        ELSIF (pCollectionType='PRODUCT') THEN
            pHtml:=pHtml || pck_core.buildProductList(pWebsiteId, pArticleId);
            --l_javascript:=l_javascript || getJSCode('deploy_cart.js');
        ELSIF (pIsMedia) THEN
            pck_media.getThumbnails(pArticleId,pDeploy=>TRUE,pHtml=>l_thumbnails);
            pHtml:=pHtml || 
            '<ol class="gallery-list">' || l_thumbnails || '</ol>
            <div class="gallery-overlay">
                <img src="">
                <span class="counter"></span>
                <button type="button" class="close-fullscreen">&times;</button>
                <button type="button" class="prev">&lt;</button>
                <button type="button" class="next">&gt;</button>
            </div>';
            --l_javascript:=l_javascript || getJSCode('deploy_gallery.js');
        END IF;

        /* Append Contact Form */
        IF (pContactForm='YES') THEN
            SELECT email INTO l_email FROM users WHERE id=pUserId;
            pHtml:=pHtml || pck_core.buildContactForm(l_email,'xx');
            --l_javascript:=l_javascript || getJSCode('deploy_contact.js');
        END IF;

        nb_articles:=regexp_count(pHtml,'<article');

        /* Assemble rest of document */
        pHtml:=pHeader || buildNavLabels(pArticleId) || pHtml  || g_curve || '</main>' || pFooter;

        /* Append all referenced svg symbols */
        n:=regexp_count(pHtml,'<use href="#([^"]+)');
        FOR i IN 1..n 
        LOOP
            l_icon_id:=REGEXP_SUBSTR(pHtml,'<use href="#([^"]+)',1,i,null,1);
            apex_string.push(l_icons,l_icon_id);
        END LOOP;

        IF (n>0) THEN
            pHtml:=pHtml || '<svg>';
            FOR C IN (SELECT id, viewbox, preserveaspectratio, svg FROM icon WHERE id IN (SELECT DISTINCT column_value FROM TABLE(l_icons)))
            LOOP
                pHtml:=pHtml || '<symbol id="' || C.id|| '" viewBox="' || C.viewbox|| '" preserveAspectRatio="' || C.preserveaspectratio || '">' || C.svg || '</symbol>';
            END LOOP;
            pHtml:=pHtml || '</svg>';
        END IF;
    END;

    /*
    ** Build resources to open requested article in Codepen
    */
    PROCEDURE getCodepen(pArticleId IN article.id%type) IS
        l_website_id website.id%type;
        
        l_domain_name website.domain_name%type;
        l_contact_form website_article.contact_form%type;
        l_collection_type website_article.collection_type%type;
        l_is_blog BOOLEAN:=FALSE;
        l_is_media BOOLEAN:=FALSE;
        l_html CLOB;
        l_header CLOB;
        l_footer CLOB;
        l_css CLOB;
        l_javascript CLOB;
        l_fluid_types pck_core.fluid_type_t;
        l_fluid_css LONG;
        l_session_data pck_core.session_data_rt;

        FUNCTION getJSCode(pFilename IN VARCHAR2) RETURN CLOB IS
        BEGIN
            FOR C IN (SELECT apex_util.blob_to_clob(file_content) file_content
                        FROM apex_application_static_files 
                       WHERE application_id=l_session_data.app_id
                         AND file_name=pFilename) 
            LOOP
                RETURN (C.file_content);
            END LOOP;
        END;

    BEGIN
        l_session_data:=pck_core.getSessionData();

        /* Get id of website owning the article because we need to build navigation labels as would appear in the deployed site */

        FOR C IN (SELECT website_id, display_order FROM website_article WHERE article_id=pArticleId AND user_id=l_session_data.user_id) LOOP
            l_website_id:=C.website_id;
        END LOOP;

        IF (l_website_id IS NULL) THEN
            /* Must be a sub-page article - so get website id from its parent article */
            FOR C IN (SELECT wa.website_id, wa.collection_type
                        FROM website_article wa, article a 
                       WHERE a.id=pArticleId
                         AND wa.article_id=a.parent_id
                         AND author_user_id=l_session_data.user_id ) 
            LOOP
                l_website_id:=C.website_id;
                l_is_blog:=C.collection_type='BLOG';
                l_is_media:=C.collection_type='MEDIA';
            END LOOP;
        END IF;

        /* Get page content */

        IF (l_is_blog OR l_is_media) THEN
            SELECT w.domain_name, w.header, a.body_html, w.footer, 'NO', null
              INTO l_domain_name, l_header, l_html, l_footer, l_contact_form, l_collection_type
              FROM website w, article a
             WHERE w.id=l_website_id
               AND a.id=pArticleId;
        ELSE
            SELECT w.domain_name, w.header, a.body_html, w.footer, wa.contact_form, wa.collection_type
              INTO l_domain_name, l_header, l_html, l_footer, l_contact_form, l_collection_type
              FROM website w, website_article wa, article a
             WHERE w.id=l_website_id
               AND wa.website_id=w.id
               AND wa.article_id=a.id
               AND a.id=pArticleId;
        END IF;

        buildBodyHtml(
            l_session_data.user_id, 
            l_website_id, 
            pArticleId, 
            l_collection_type, 
            l_is_media, 
            l_contact_form, 
            l_header, 
            l_footer, 
            l_html);

        apex_json.open_object;
        apex_json.write('success', TRUE); 
        apex_json.write('domain_name', l_domain_name);
        apex_json.write('html', l_html);
        apex_json.write('css', pck_core.buildCssRoot(l_website_id, l_session_data.app_id, FALSE));
        apex_json.write('js', l_javascript);
        apex_json.close_object;

        EXCEPTION WHEN OTHERS THEN 
            pck_core.log_error;
    END;

    /*
     **  Update website HTML / CSS from the contents of an exported Codepen zip file
     */        
    PROCEDURE uploadCodepen(pId IN VARCHAR2, pZipFile IN BLOB) IS
        l_website_id website.id%type;
        l_article_id article.id%type;
        l_css CLOB;
        l_header CLOB;
        l_footer CLOB;
        l_body_html CLOB;
        l_zip BLOB:=pZipFile;
        l_files apex_zip.t_files;
        l_session_data pck_core.session_data_rt;
        l_nb_files PLS_INTEGER:=0;
        l_pos PLS_INTEGER;

        FUNCTION extractFragment(pClob IN OUT NOCOPY CLOB, pStartChar IN VARCHAR2, pEndChar IN VARCHAR2) RETURN CLOB IS
            pos1 PLS_INTEGER;
            pos2 PLS_INTEGER;
        BEGIN
            pos1:=dbms_lob.instr(pClob,pStartChar,1,1);
            IF (pos1>0) THEN
                pos2:=dbms_lob.instr(pClob,pEndChar,pos1,1);
                IF (pos2>0) THEN
                    pos2:=pos2+LENGTH(pEndChar);
                    RETURN (dbms_lob.substr(pClob, pos2-pos1, pos1));
                END IF;
            END IF;
            RETURN NULL;
        END;

        PROCEDURE deleteFragment(pClob IN OUT NOCOPY CLOB, pStartChar IN VARCHAR2, pEndChar IN VARCHAR2) IS
            pos1 PLS_INTEGER;
            pos2 PLS_INTEGER;
        BEGIN
            pos1:=dbms_lob.instr(pClob,pStartChar,1,1);
            IF (pos1>0) THEN
                pos2:=dbms_lob.instr(pClob,pEndChar,pos1,1);
                IF (pos2>0) THEN
                    pos2:=pos2+LENGTH(pEndChar);
                    dbms_lob.fragment_delete(pClob, pos2-pos1, pos1);
                END IF;
            END IF;
        END;
        
        FUNCTION deleteFragment(pClob IN OUT NOCOPY CLOB, pStartChar IN VARCHAR2, pEndChar IN VARCHAR2) RETURN PLS_INTEGER IS
            pos1 PLS_INTEGER;
            pos2 PLS_INTEGER;
        BEGIN
            pos1:=dbms_lob.instr(pClob,pStartChar,1,1);
            IF (pos1>0) THEN
                pos2:=dbms_lob.instr(pClob,pEndChar,pos1,1);
                IF (pos2>0) THEN
                    pos2:=pos2+LENGTH(pEndChar);
                    dbms_lob.fragment_delete(pClob, pos2-pos1, pos1);
                END IF;
            END IF;
            RETURN (pos1);
        END;

        PROCEDURE replaceFragment(pClob IN OUT NOCOPY CLOB, pStartChar IN VARCHAR2, pEndChar IN VARCHAR2, pReplaceChar IN VARCHAR2) IS
            pos1 PLS_INTEGER;
            pos2 PLS_INTEGER;
        BEGIN
            pos1:=dbms_lob.instr(pClob,pStartChar,1,1);
            IF (pos1>0) THEN
                pos2:=dbms_lob.instr(pClob,pEndChar,pos1,1);
                IF (pos2>0) THEN
                    pos2:=pos2+LENGTH(pEndChar);
                    dbms_lob.fragment_replace(pClob, pos2-pos1, LENGTH(pReplaceChar), pos1, pReplaceChar);
                END IF;
            END IF;
        END;

    BEGIN
        l_session_data:=pck_core.getSessionData();

        /* pId contains website_id,article_id */
        l_website_id:=SUBSTR(pId,1,INSTR(pId,',')-1);
        l_article_id:=SUBSTR(pId,INSTR(pId,',')+1);

        l_files:=apex_zip.get_files(p_zipped_blob => l_zip);

        FOR i in 1 .. l_files.COUNT LOOP
            IF (INSTR(l_files(i),'/src/style.css')>0) THEN
                l_css:=apex_util.blob_to_clob(p_blob => apex_zip.get_file_content(p_zipped_blob => l_zip, p_file_name => l_files(i)));
                l_nb_files:=l_nb_files+1;
            ELSIF (INSTR(l_files(i),'/src/index.html')>0) THEN
                l_body_html:=apex_util.blob_to_clob(p_blob => apex_zip.get_file_content(p_zipped_blob=>l_zip, p_file_name=>l_files(i)));
                --l_body_html:=REPLACE(l_body_html,g_curve,'<div class="page-break" style="page-break-after:always;"><span style="display:none;">&nbsp;</span></div>');
                l_header:=extractFragment(l_body_html,'<header','</header>');
                l_footer:=extractFragment(l_body_html,'<footer','</footer>');
                l_nb_files:=l_nb_files+1;
            END IF;
        END LOOP;

        IF (l_nb_files<2) THEN
            apex_json.open_object;
            apex_json.write('success', TRUE);
            apex_json.write('message', '** NOT A CODEPEN EXPORT FILE **');
            apex_json.close_object;
            RETURN;
        END IF;

        /* Extract header and footer elements */

        UPDATE website SET css=l_css, header=l_header, footer=l_footer, updated_date=current_timestamp WHERE id=l_website_id;
        UPDATE article SET body_html=l_body_html, updated_date=current_timestamp WHERE id=l_article_id;
        
        SELECT css, header, footer INTO l_css, l_header, l_footer FROM website WHERE id=l_website_id FOR UPDATE;
        
        /* remove design tokens and font link */
        deleteFragment(l_css,':root','}');
        deleteFragment(l_css,'<link','>');

        SELECT body_html INTO l_body_html FROM article WHERE id=l_article_id FOR UPDATE;
        
        deleteFragment(l_body_html,'<header','</header>');
        deleteFragment(l_body_html,'<nav','</nav>');
        deleteFragment(l_body_html,'<main','>');
        deleteFragment(l_body_html,'</main','>');
        deleteFragment(l_body_html,'<footer','</footer>');
        LOOP
            EXIT WHEN deleteFragment(l_body_html,'<svg class="curve','</svg>')=0;
        END LOOP;
        deleteFragment(l_body_html,'<svg>','</svg>');
        replaceFragment(l_body_html,'<article class="featured','</article>','<article class="featured"></article>');

        /* Means no CSS file included in zip - set website.css to NULL*/
        apex_json.open_object;
        apex_json.write('success', TRUE);
        apex_json.write('message', 'Codepen zip uploaded successfully');
        apex_json.write('html',l_body_html);
        apex_json.close_object;

        EXCEPTION
            WHEN OTHERS THEN
                pck_core.log_error;
    END;    
end;
/