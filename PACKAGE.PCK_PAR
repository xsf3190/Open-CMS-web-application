CREATE OR REPLACE EDITIONABLE PACKAGE "PCK_PAR" AS
  GC_OCI_NAMESPACE        CONSTANT VARCHAR2(100)  := 'lrnq79mlk9b0';
  GC_OCI_BUCKET_NAME      CONSTANT VARCHAR2(100)  := 'RESTARTNET_JS';
  GC_OCI_OBJECT_BASE_URL  CONSTANT VARCHAR2(100)  := 'objectstorage.uk-london-1.oci.customer-oci.com';
  GC_OCI_CRED_STATIC_ID   CONSTANT VARCHAR2(50)   := 'RESTARTNET_CREDENTIAL';
  GC_PAR_NAME_PREFIX      CONSTANT VARCHAR2(25)   := 'RESTARTNET_';

-- Generate a pre-authenticated request URL.
-- p_expiration_unit   Unit used to calculate URL expiration time. Values: [DAY,HOUR,MINUTE,SECOND]
-- p_expiration_value  Number of p_expiration_unit used to calculate URL expiration time.
-- p_access_type       Permissions: [ObjectRead,ObjectWrite,ObjectReadWrite,AnyObjectWrite,AnyObjectRead,AnyObjectReadWrite]
-- p_object_name       Object name or Prefix of objects in bucket that URL has access to.
-- p_object_listing    Allow URL to list objects. Values: [Deny,ListObjects]
FUNCTION generate_pre_auth_request
 (p_expiration_unit   IN VARCHAR2,
  p_expiration_value  IN NUMBER,
  p_access_type       IN VARCHAR2,
  p_object_name       IN VARCHAR2 DEFAULT NULL,
  p_object_listing    IN VARCHAR2 DEFAULT 'Deny') RETURN VARCHAR2;
  
END PCK_PAR;
/
CREATE OR REPLACE EDITIONABLE PACKAGE BODY "PCK_PAR" AS

FUNCTION generate_pre_auth_request
 (p_expiration_unit   IN VARCHAR2,
  p_expiration_value  IN NUMBER,
  p_access_type       IN VARCHAR2,
  p_object_name       IN VARCHAR2 DEFAULT NULL,
  p_object_listing    IN VARCHAR2 DEFAULT 'Deny') RETURN VARCHAR2 IS

  l_request_url         VARCHAR2(1000);
  l_request_json        CLOB;
  l_response_json       CLOB;
  l_response_obj        JSON_OBJECT_T;
  l_expires_ts_tz       TIMESTAMP WITH TIME ZONE;
  l_expires_str         VARCHAR2(100);
  l_par_name            VARCHAR2(100);

BEGIN

  -- Determine the expiration time for the PAR.
  l_expires_ts_tz := SYSTIMESTAMP AT TIME ZONE 'UTC' + NUMTODSINTERVAL(p_expiration_value, p_expiration_unit);
  l_expires_str   := TO_CHAR(l_expires_ts_tz,'yyyy-mm-dd"T"hh24:mi:ss"Z"');

  -- Build the name for the PAR.
  l_par_name := GC_PAR_NAME_PREFIX || p_access_type || '_' || l_expires_str;
  
  -- Build up the URL to call the OCI web service which will generate the PAR.
  --https://lrnq79mlk9b0.objectstorage.uk-london-1.oci.customer-oci.com/n/lrnq79mlk9b0/b/RESTARTNET_JS/o/deploy_edit-codepen.js

  /*l_request_url := 'https://' || GC_OCI_NAMESPACE ||
                    '.' || GC_OCI_OBJECT_BASE_URL ||
                     '/n/' || GC_OCI_NAMESPACE || 
                     '/b/' || GC_OCI_BUCKET_NAME ||
                     '/p/';*/
    l_request_url:='https://objectstorage.uk-london-1.oraclecloud.com/n/lrnq79mlk9b0/b/RESTARTNET_JS/p/';
  --pck_core.log('l_request_url:'||l_request_url);

  -- Build the Request Body for the call to the generate the PAR web service.
  l_request_json := '{' ||
                    '"accessType":'  || apex_json.stringify( p_access_type ) || ',' ||
                    '"name":'        || apex_json.stringify( l_par_name ) || ',' ||
                    CASE 
                      WHEN p_object_name IS NOT NULL THEN '"objectName":'  || apex_json.stringify( p_object_name ) || ','
                      ELSE NULL
                    END  ||
                    '"bucketListingAction":' || apex_json.stringify( p_object_listing ) || ',' ||
                    '"timeExpires":' || apex_json.stringify( l_expires_str ) || 
                    '}';
    
  -- Call Web Service.
  
  l_response_json := apex_web_service.make_rest_request
   (p_url                  => l_request_url,
    p_http_method          => 'POST',
    p_body                 => l_request_json,
    p_credential_static_id => GC_OCI_CRED_STATIC_ID);

  pck_core.log('g_status_code:'||apex_web_service.g_status_code);

  IF apex_web_service.g_status_code = 200 THEN
    -- Parse the JSON Response.
    l_response_obj := json_object_t.parse(l_response_json);
    -- Return the PAR URL e.g. https://objectstorage.us-ashburn-1.oraclecloud.com/p/vDWqlx78OJgBIHyMFAZfzQSszzxcozXeQq3jNMuoMHsyrL2QR5TZCvlKC_UEtlDJ/n/nueva/b/nueva_apps/o/
    pck_core.log('Successful create PAR');
    RETURN ('https://lrnq79mlk9b0.' || GC_OCI_OBJECT_BASE_URL || l_response_obj.get_String('accessUri'));
  ELSE
    pck_core.log('Error Generating PAR');
    raise_application_error(-20111,'Unable to Create Preauthenticated Request.');
  END IF;

EXCEPTION WHEN OTHERS THEN
  pck_core.log_error;

END generate_pre_auth_request;

END PCK_PAR;
/