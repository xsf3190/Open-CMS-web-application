CREATE OR REPLACE EDITIONABLE PACKAGE "PCK_SEC" AS 
  
  PROCEDURE post_auth_facebook;

  PROCEDURE post_auth_google;

  PROCEDURE post_auth_linkedin;

  PROCEDURE post_auth_azure;

  PROCEDURE signout;

END PCK_SEC;
/
CREATE OR REPLACE EDITIONABLE PACKAGE BODY "PCK_SEC" AS
  
    /*
    ** This procedure is called in the Post-authentication of Social Sign-in processing.
    ** Create new entry or update entry in USERS table for the authenticated user
    */
    PROCEDURE insert_user_login(p_auth_provider IN VARCHAR2, p_email IN VARCHAR2, p_name IN VARCHAR2) IS
        l_user_id users.id%type;
        l_user_name users.name%type;
        l_client_tz users.client_tz%type;
        l_client_tz_session users.client_tz%type:=apex_util.get_session_state('APP_CLIENT_TZ');
    BEGIN
        INSERT INTO user_login(auth_provider,email,name) VALUES (p_auth_provider, p_email, p_name);
        
        BEGIN
            SELECT id, name
              INTO l_user_id, l_user_name
              FROM users WHERE email=p_email;
            
            UPDATE users SET name=p_name, client_tz=l_client_tz_session, last_login_date=current_timestamp, last_login_provider=p_auth_provider WHERE id=l_user_id;
            
            EXCEPTION WHEN NO_DATA_FOUND 
            THEN
                INSERT INTO users(email, name, client_tz, last_login_date, last_login_provider) 
                VALUES (p_email, p_name, l_client_tz_session, current_timestamp, p_auth_provider) 
                RETURNING id, name INTO l_user_id, l_user_name;
        END;
        apex_util.set_session_state('APP_USER_ID',l_user_id);
        apex_util.set_session_state('APP_USER_NAME',l_user_name);
        
        COMMIT;
    END;    

    PROCEDURE post_auth_facebook IS
    BEGIN
        insert_user_login('Facebook', apex_json.get_varchar2('email'), apex_json.get_varchar2('name'));
    END;

    PROCEDURE post_auth_google IS
    BEGIN
        insert_user_login('Google', apex_json.get_varchar2('email'), apex_json.get_varchar2('name'));
    END; 

    /* Linked-In API has separate entry points for profile name and email address */
    PROCEDURE post_auth_linkedin IS
        l_name users.name%type;
        l_email users.email%type;
        l_clob CLOB;
        l_names owa_cookie.vc_arr;
        l_vals owa_cookie.vc_arr;
        l_num_vals INTEGER;
    BEGIN
        pck_cms.log('starting'); 
        l_name:=apex_json.get_varchar2('localizedFirstName') || ' ' || apex_json.get_varchar2('localizedLastName');
        
        /*
        APEX_WEB_SERVICE.g_request_cookies.delete();
        owa_cookie.get_all(names => l_names,vals => l_vals,num_vals => l_num_vals);
        pck_cms.log('pck_sec.post_auth_linkedin','setting cookies');    
        FOR r IN 1 .. l_names.COUNT LOOP 
            pck_cms.log(l_names(r),l_vals(r));             
            APEX_WEB_SERVICE.g_request_cookies(1).name := l_names(r);
            APEX_WEB_SERVICE.g_request_cookies(1).value := l_vals(r);
        END LOOP;
        */
        apex_web_service.g_request_headers.delete();
        pck_cms.log('Before make_rest_request');
        l_clob := apex_web_service.make_rest_request(
            p_url => 'https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))',
            p_http_method => 'GET',
            p_credential_static_id => 'Linkedin',
            p_token_url => 'https://www.linkedin.com/oauth/v2/accessToken');
        pck_cms.log(l_clob);

        SELECT emailAddress INTO l_email 
          FROM JSON_TABLE(l_clob format json, '$'
            COLUMNS emailAddress VARCHAR2(100)  PATH '$.elements[0]."handle~".emailAddress');    

        apex_application.g_user:=l_email;

        insert_user_login('Linkedin', l_email, l_name);        
    END;   

    PROCEDURE post_auth_azure IS
    BEGIN
        insert_user_login('Azure', apex_json.get_varchar2('userPrincipalName'), apex_json.get_varchar2('givenName') || ' ' || apex_json.get_varchar2('surname'));
    END; 

    PROCEDURE signout IS
        l_logout_url varchar2(200):=apex_util.host_url('APEX_PATH')||V('LOGOUT_URL');
    BEGIN
        apex_util.redirect_url(l_logout_url);
    END;

END PCK_SEC;
/