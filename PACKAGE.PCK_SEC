CREATE OR REPLACE EDITIONABLE PACKAGE "PCK_SEC" AS 
    --
    PROCEDURE post_auth_facebook;
    --
    PROCEDURE post_auth_google;
    --
    PROCEDURE subscribe;
    --
END PCK_SEC;
/
CREATE OR REPLACE EDITIONABLE PACKAGE BODY "PCK_SEC" AS

    PROCEDURE subscribe IS
        l_header_value     VARCHAR2(4000);
        l_bearer_token     VARCHAR2(4000);
        l_token            APEX_JWT.T_TOKEN;
        l_user_object      APEX_JSON.T_VALUES;
        l_email            users.email%type;
    BEGIN
        --get the authorization header value from the request
        l_header_value := OWA_UTIL.get_cgi_env('Authorization');
        

        -- Check if the Authorization header exists and starts with 'Bearer '
        IF l_header_value IS NOT NULL AND INSTR(l_header_value, 'Bearer ') = 1 THEN
            -- Extract the token part after 'Bearer '
            l_bearer_token := SUBSTR(l_header_value, 8);
            pck_core.log(l_bearer_token);
        ELSE
            --return error message in json format if the token is not founded
            APEX_JSON.open_object;
            APEX_JSON.write ('message', 'Error no token found');
            APEX_JSON.close_object;
            --:status := 401;
            RETURN;
        END IF;

        l_token :=apex_jwt.DECODE (p_value =>l_bearer_token);
        --l_token :=apex_jwt.DECODE (p_value =>l_bearer_token, p_signature_key=>sys.UTL_RAW.cast_to_raw ('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'));
        apex_json.parse (l_user_object, l_token.payload);
        l_email:=apex_json.get_varchar2 (p_path => 'email', p_values => l_user_object);
        pck_core.log('l_email:' || l_email);

        APEX_JSON.open_object;
        APEX_JSON.write ('success', TRUE);
        APEX_JSON.close_object;

    END;
  
    /*
    ** This procedure is called in the Post-authentication of Social Sign-in processing.
    ** First-time authenticated users are inserted into the USERS table
    */
    PROCEDURE insert_user_login(p_auth_provider IN VARCHAR2, p_email IN VARCHAR2, p_name IN VARCHAR2) IS
        l_user_id users.id%type;
        --l_user_name users.name%type;
        --l_client_tz users.client_tz%type;
        --l_client_tz_session users.client_tz%type:=apex_util.get_session_state('APP_CLIENT_TZ');
        l_workspace_id apex_workspaces.workspace_id%type;
    BEGIN
        SELECT workspace_id
          INTO l_workspace_id
          FROM apex_workspaces
         WHERE workspace = (
                SELECT workspace
                FROM apex_applications
                WHERE application_id = APEX_APPLICATION.G_FLOW_ID
                );
        /*
        FOR C IN (
            SELECT apex_session_id
              FROM apex_workspace_sessions
             WHERE workspace_id = l_workspace_id
               AND user_name = APEX_APPLICATION.G_USER
               AND apex_session_id != APEX_APPLICATION.G_INSTANCE
        )
        LOOP
            apex_session.delete_session(p_session_id => C.apex_session_id);
            DELETE session_data WHERE session_id=C.apex_session_id;
        END LOOP;
        */

        INSERT INTO user_login(auth_provider,email,name,apex_session_id) VALUES (p_auth_provider, p_email, p_name, APEX_APPLICATION.G_INSTANCE);

        BEGIN
            SELECT id
              INTO l_user_id
              FROM users 
             WHERE email=p_email;

            UPDATE users 
               SET name=p_name, last_login_date=current_timestamp, last_login_provider=p_auth_provider 
             WHERE id=l_user_id;

            EXCEPTION WHEN NO_DATA_FOUND 
            THEN
                INSERT INTO users(email, name, last_login_date, last_login_provider) 
                VALUES (p_email, p_name, current_timestamp, p_auth_provider);
        END;
        COMMIT;
    END;    

    PROCEDURE post_auth_facebook IS
    BEGIN
        insert_user_login('Facebook', apex_json.get_varchar2('email'), apex_json.get_varchar2('name'));
        EXCEPTION WHEN OTHERS THEN pck_core.log_error; RAISE;
    END;

    PROCEDURE post_auth_google IS
    BEGIN
        insert_user_login('Google', apex_json.get_varchar2('email'), apex_json.get_varchar2('name'));
        EXCEPTION WHEN OTHERS THEN pck_core.log_error; RAISE;
    END; 

    /* 
    ** Linked-In API has separate entry points for profile name and email addres.
    ** Support very rude. API is bollocks. Gave up on Linkedin but keep the code just in case
    */
    /*
    PROCEDURE post_auth_linkedin IS
        l_name users.name%type;
        l_email users.email%type;
        l_clob CLOB;
        l_names owa_cookie.vc_arr;
        l_vals owa_cookie.vc_arr;
        l_num_vals INTEGER;
    BEGIN
        pck_cms.log('starting'); 
        l_name:=apex_json.get_varchar2('localizedFirstName') || ' ' || apex_json.get_varchar2('localizedLastName');

        apex_web_service.g_request_headers.delete();
        pck_cms.log('Before make_rest_request');
        l_clob := apex_web_service.make_rest_request(
            p_url => 'https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))',
            p_http_method => 'GET',
            p_credential_static_id => 'Linkedin',
            p_token_url => 'https://www.linkedin.com/oauth/v2/accessToken');
        pck_cms.log(l_clob);

        SELECT emailAddress INTO l_email 
          FROM JSON_TABLE(l_clob format json, '$'
            COLUMNS emailAddress VARCHAR2(100)  PATH '$.elements[0]."handle~".emailAddress');    

        apex_application.g_user:=l_email;

        insert_user_login('Linkedin', l_email, l_name);        
    END;   
    */

    /*
    **  Gave up on Azure too - can't remember why though.
    */
    /*
    PROCEDURE post_auth_azure IS
    BEGIN
        insert_user_login('Azure', apex_json.get_varchar2('userPrincipalName'), apex_json.get_varchar2('givenName') || ' ' || apex_json.get_varchar2('surname'));
    END; 
    */

END PCK_SEC;
/